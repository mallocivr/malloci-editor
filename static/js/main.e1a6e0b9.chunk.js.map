{"version":3,"sources":["firebase/firebase.js","firebase/FileDictionary.js","components/markdownguidetablerooms.js","components/markdownguidetableartifact.js","components/markdownguide.js","components/exhibittext.js","components/imagefiles.js","components/header.js","components/layout.js","malloci/vrmd-parser.js","components/exhibitdocument.js","components/exhibit.js","pages/mallocieditor.js","components/pgimagefiles.js","pages/playground.js","pages/museum.js","pages/gallery.js","pages/Home.js","pages/example.js","pages/about.js","malloci/wiki-parser.js","pages/wikiviewer.js","App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","database","FileDict","columns","title","className","dataIndex","data1","key","markdown","rendered","markdownguidetablerooms","id","dataSource","bordered","pagination","markdownguidetableartifact","Panel","Collapse","markdownguide","defaultActiveKey","header","TextArea","Input","TabPane","Tabs","callback","console","log","styles","display","ExhibitText","props","useState","value","setValue","useEffect","onChange","type","tab","label","event","options","insertTexts","horizontalRule","image","link","table","style","audioFileTypes","name","multiple","customRequest","file","onError","onSuccess","uuid","uuidv4","includes","split","pop","ref","put","on","snapShot","err","resp","child","getDownloadURL","then","fireBaseUrl","info","status","fileList","message","success","error","ImageFiles","UploadOutlined","Header","siteTitle","defaultProps","Layout","children","margin","padding","Date","getFullYear","VRMD","VSCode","debug","this","tree","cleanedMD","mdListString","exJSON","floor","walls","ceiling","frames","subJSON","artifacts","level","text","block_quote","code_block","in_code","hidden_block","mdLines","i","length","line","words","charAt","shift","rooms","push","artifact","join","parseArtifact","replace","field","substring","lastIndexOf","textureSrc","theme","sky","splice","addAudio","markDown","maxRooms","maxImages","fileDict","h3_count","match","roomCount","imageCount","priority","test","addFrame","audioSrc","frameSrc","src","alt","code","cleaned","lang","Exhibitdocument","flatten","React","Children","toArray","reduce","document","getElementById","querySelectorAll","forEach","block","hljs","highlightBlock","md","source","renderers","heading","slug","toLowerCase","createElement","exhibit","treeString","JSON","stringify","color","cursor","editor","exhibitId","vr-mode-ui","embedded","background","position","rotation","movement-controls","enabled","look-controls","autoplay","volume","loop","laser-controls","hand","raycaster","objects","far","teleport-controls","collisionEntities","drawForAllCollisions","landingMaxAngle","button","cameraRig","teleportOrigin","malloci","wallHeight","base64Mode","b64","Mallocieditor","useParams","museumTree","setMuseumTree","setMd","rawMD","setRawMD","owner","setOwner","modalVisible","setModalVisible","redirect","setRedirect","updateExhibit","a","vrmdParser","parse","fetch","method","mode","cache","credentials","headers","referrerPolicy","body","response","ok","json","docRef","collection","doc","get","exists","auth","currentUser","uid","data","authorID","o2","FileDictConcat","catch","classname","span","onClick","shape","icon","DeleteOutlined","visible","onOk","delete","onCancel","okText","okButtonProps","cancelText","DeleteButton","Object","keys","update","preview","add","author","displayName","uploadExhibit","to","RedirectRenderer","reader","FileReader","readAsBinaryString","onload","e","bits","target","result","sessionStorage","setItem","Playground","description","showIcon","closable","email","goToEditor","Museum","res","post","Meta","Card","Gallery","tiles","setTiles","querySnapshot","exhibits","docs","map","hoverable","width","cover","Home","Example","isOwner","setIsOwner","EditOutlined","checkOwnerShip","About","WikiParser","api","fetchUrl","query","limit","onready","params","action","list","search","format","url","page","self","html","htmlToMd","waitForImages","pageName","encodeURIComponent","parseImages","numRooms","numImages","waitForImage","imgPlaceholder","DOMParser","parseFromString","getElementsByClassName","childNodes","node","nodeName","textContent","startsWith","cleanText","links","getElementsByTagName","linkId","el","getAttribute","imgIdx","page_summary","Math","min","originalimage","height","caption","extract","pref","repeat","parseInt","images","captions","j","w","isOrdered","items","listMD","l","bullet","setTimeout","removeIdx","sort","b","WikiViewer","wikiParser","setOptions","left","zIndex","onSelect","parseFull","maxPerRoom","onSearch","searchText","val","placeholder","App","loggedIn","setLoggedIn","redirectOnLogOut","setRedirectOnLogout","onAuthStateChanged","user","href","Item","signOut","provider","GoogleAuthProvider","signInWithPopup","login","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e1a6e0b9.chunk.js","sourcesContent":["import * as firebase from 'firebase'\nimport 'firebase/storage'\nimport 'firebase/firestore'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyCLN6m_UZpazTVvrX1vtFdyTEPx7wYaTyk\",\n    authDomain: \"malloci-8f365.firebaseapp.com\",\n    databaseURL: \"https://malloci-8f365.firebaseio.com\",\n    projectId: \"malloci-8f365\",\n    storageBucket: \"malloci-8f365.appspot.com\",\n    messagingSenderId: \"126802496533\",\n    appId: \"1:126802496533:web:614183fabd31d8510bd21c\",\n    measurementId: \"G-BSBQC0NNQJ\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst storage = firebase.storage()\nconst database = firebase.firestore()\n\nexport  {\n    storage, database, firebase as default\n}\n ","let FileDict = {}\n\nexport default FileDict","import React from \"react\"\n\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Markdown',\n      className: 'markdown',\n      dataIndex: 'markdown',\n    },\n    {\n      title: 'Rendered',\n      className: 'rendered',\n      dataIndex: 'rendered',\n    },\n  ];\n  \n  const data1 = [\n    {\n      key: '1',\n      markdown: '# Museum Title\\n## Section Title\\n### Subsection Title\\n...',\n      rendered: 'Create rooms in your museum.',\n    },\n    {\n      key: '2',\n      markdown: '![caption text](img.jpg)',\n      rendered: '​The image will be framed and hung on the wall in the exhibit',\n    },\n    {\n      key: '3',\n      markdown: '> Block quote\\n\\n> Multi line\\n> block quote',\n      rendered: '​This text will become a descriptive panel, adding context to your exhibit',\n    },\n    {\n      key: '4',\n      markdown: '```\\n// This code will be rendered\\n// as text art\\nvar s = \"JavaScript syntax highlighting\" \\n alert(s);\\n```',\n      rendered: <code>// This code will be rendered<br/>// as text art<br/>var s = \"JavaScript syntax highlighting\"<br />alert(s)</code>,\n    }\n  ];\n\nconst markdownguidetablerooms = () => (\n  <div>\n    <Table id=\"panelstyle\"\n    // showHeader={false}\n      columns={columns}\n      dataSource={data1}\n      bordered\n      pagination={false}\n    // title={() => 'Header'}\n    // footer={() => 'Footer'}\n  />\n  </div>\n);\n\nexport default markdownguidetablerooms","import React from \"react\"\n\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Markdown',\n      className: 'markdown',\n      dataIndex: 'markdown',\n    },\n    {\n      title: 'Rendered',\n      className: 'rendered',\n      dataIndex: 'rendered',\n    },\n  ];\n  \n  const data1 = [\n    {\n      key: '1',\n      markdown: '$[walls](img.jpg) \\n$[ceiling](img.jpg) \\n$[floor](img.jpg)\\n$[frames](img.jpg)\\n$[sky](255, 255, 255)',\n      rendered: 'set the textures of the walls,\\nceiling,\\nfloor,\\nframes,\\nor color of the sky (hex code or rgb).'\n    },\n    {\n      key: '2',\n      markdown: '![caption text](img.jpg) \\n^[audio](audio-file.m4a)',\n      rendered: 'This audio file will be attached to the artifact on the line above it'\n    },\n    {\n      key: '3',\n      markdown: '> block quote\\n> with cutom frame \\n^[frame](img.jpg)',\n      rendered: 'This will define a custom frame texture for the artifact on the line above it'\n    },\n    {\n      key: '4',\n      markdown: '![caption text](img.jpg) \\n^[frame](img.jpg)\\n^[audio](audio-file.m4a)',\n      rendered: 'An artifact with a custom frame and audio description.'\n    },\n    {\n      key: '5',\n      markdown: '~ \\n![These artifacts](img.jpg) \\n\\n> Will be hidden\\n> from the article\\n> but will be visible\\n> in the exhibit!\\n~',\n      rendered: 'These artifacts will be visible in the VR museum, but not in the document view',\n    }\n  ];\n\nconst markdownguidetableartifact = () => (\n  <div>\n    <Table id=\"panelstyle\"\n    // showHeader={false}\n      columns={columns}\n      dataSource={data1}\n      bordered\n      pagination={false}\n    // title={() => 'Header'}\n    // footer={() => 'Footer'}\n  />\n  </div>\n);\n\nexport default markdownguidetableartifact","import React from \"react\"\n\nimport { Collapse } from 'antd';\nimport MarkdownGuideTableRooms from './markdownguidetablerooms';\nimport MarkdownGuideTableArtifact from './markdownguidetableartifact';\n\n\n\nconst { Panel } = Collapse;\n\nconst markdownguide = () => (\n    <div className=\"markdown-container\">\n    <Collapse defaultActiveKey={['']}>\n        <Panel header=\"VR Markdown syntax guide\" id=\"headerstyle\" key=\"1\">\n            <div className=\"syntax-guide\">\n            <p>Basic Syntax:</p>\n            <MarkdownGuideTableRooms />\n            <p>Extended Syntax:</p>\n            <MarkdownGuideTableArtifact />\n            </div>\n        </Panel>\n  </Collapse>\n    </div>\n);\n\nexport default markdownguide  ","import React, { useState, useEffect } from \"react\"\n\nimport { Tabs } from 'antd';\nimport { Input } from 'antd';\nimport MarkdownGuide from \"./markdownguide\";\nimport SimpleMDEReact from \"react-simplemde-editor\";\nimport \"easymde/dist/easymde.min.css\";\n\nconst { TextArea } = Input;\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst styles = {display: \"none\"};\n\n\nfunction ExhibitText(props) {\n    const [value, setValue] = useState(props.value);\n    const handleChange = (event) => {        \n        setValue(event);\n    };\n\n    useEffect(function(){\n        setValue(props.value)\n    },[props.value])\n\n    return (\n        <div className=\"card-container\">\n            <Tabs onChange={callback} type=\"card\">\n                <TabPane tab=\"Markdown\" key=\"1\">\n                    {/* <p className=\"description\">\n                        Create your exhibit in this panel; there's a guide detailing the markdown syntax you should use below. There are basic basic buttons to help you with the markdown syntax. You can click on the H icon to add a header, the link icon to link images, the blockquote icon to add a quote, and so on. In the event that you're using images from the internet in your exhibit via links, make sure that you're using images which are marked for reuse (they'll be blocked by your browser and won't show up, otherwise).\n                </p> */}\n                <div id=\"editorheight\">\n                    <MarkdownGuide />\n                    <SimpleMDEReact\n                        id=\"editor3\"\n                        label=\"Markdown Editor\"\n                        value={value}\n                        // onChange={event => handleChange(textValue, event.target.value)}\n                        // onChange = {e => setValue(e.target.value)}\n                        onChange={handleChange}\n                        options={{\n                            insertTexts: {\n                                horizontalRule: [\"\", \"\\n\\n-----\\n\\n\"],\n                                image: [\"\\n\\n![a caption describing your image](image-name\", \".jpg)\\n\\n\"],\n                                link: [\"[\", \"](http://)\"],\n                                table: [\"\", \"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text      | Text     |\\n\\n\"],\n                            },\n                        }}\n                    />\n                    <TextArea id=\"editor\"\n                        value={value}\n                        style={styles}>\n                    </TextArea>\n                    </div>\n                </TabPane>\n            </Tabs>\n        </div>\n\n    )\n};\n\nexport default ExhibitText","import React from \"react\"\nimport {storage} from \"../firebase/firebase\"\nimport { v4 as uuidv4 } from 'uuid';\n\nimport FileDict from '../firebase/FileDictionary'\n\nimport { Upload, message, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst audioFileTypes = ['m4a', 'mp3', 'wav']\n\nconst props = {\n    name: 'file',\n    multiple: true,\n    customRequest({\n      file,\n      onError,\n      onSuccess,\n    }) {\n      let uuid = uuidv4();\n      let uploadTask = null\n      if(audioFileTypes.includes(file.name.split('.').pop()))\n      {\n        uploadTask = storage.ref(`/audio/${uuid + file.name}`).put(file)\n      }\n      else\n      {\n        uploadTask = storage.ref(`/images/${uuid + file.name}`).put(file)\n\n      }\n\n      uploadTask.on('state_changed', \n      (snapShot) => {\n        //takes a snap shot of the process as it is happening\n        console.log(snapShot)\n      }, (err) => {\n        //catches the errors\n        console.log(err)\n        onError(err, file)\n      }, (resp) => {\n        // gets the functions from storage refences the image storage in firebase by the children\n        // gets the download url then sets the image from firebase as the value for the imgUrl key:\n        if(audioFileTypes.includes(file.name.split('.').pop()))\n        {\n          storage.ref('audio').child(uuid + file.name).getDownloadURL()\n            .then(fireBaseUrl => {\n              FileDict[file.name] = fireBaseUrl\n            })\n        }\n        else\n        {\n          storage.ref('images').child(uuid + file.name).getDownloadURL()\n            .then(fireBaseUrl => {\n              FileDict[file.name] = fireBaseUrl\n            })\n        }\n        \n        onSuccess(resp, file);\n      })\n    },\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n  };\n  \nconst ImageFiles = () => {\n\n  return(\n    <Upload {...props}>\n      <Button>\n        <UploadOutlined /> Upload\n      </Button>\n    </Upload>\n  )}\n\nexport default ImageFiles\n","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport { PageHeader } from 'antd';\n\n\nconst Header = ({ siteTitle }) => (\n\n  <PageHeader\n    className=\"site-page-header\"\n    title={siteTitle}\n    // avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}    \n    />\n    \n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `Malloci`,\n}\n\nexport default Header\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"./layout.css\"\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      {/* <Header siteTitle={siteTitle}/> */}\n    \n      <div\n        style={{\n          margin: `0 auto`,\n          // maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with mochi muffins.\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","export default class VRMD\n{\n    constructor(VSCode = null, debug = false)\n    {\n        this.VSCode = VSCode\n        this.debug = debug\n        this.tree = null\n        this.cleanedMD = null\n    }\n\n    parseList(mdListString)\n    {\n        \n        let exJSON = {}\n        exJSON.rooms = []\n        exJSON.theme = {floor: null, walls: null, ceiling: null, frames: null}\n\n        let subJSON = {}\n        let artifacts = []\n\n        let level = \"\"\n        let text = \"\"\n\n        let block_quote = \"\"\n        let code_block = \"\"\n\n        let in_code = false\n\n        let hidden_block = false\n\n        let mdLines = mdListString.split(',')\n\n\n        for(let i = 0; i < mdLines.length; i++)\n        {      \n            let line = mdLines[i]\n            let words = line.split(\" \")            \n\n            // Headings\n            if (words[0].charAt(0) === \"#\" && !in_code)\n            {\n                // if(words[0].includes(\"###\")) \n                //     continue\n\n                level = words.shift()\n\n                if(subJSON.name !== null)\n                {\n                    subJSON.text = text\n                    subJSON.artifacts = artifacts\n            \n                    text = \"\"\n                    artifacts = []\n\n                    // if(level === \"#\" || level === \"##\")\n                    // {\n                    exJSON.rooms.push(subJSON)\n                    subJSON = {}\n                    // }\n                }\n                else if (text !== \"\")\n                {\n                    exJSON.text = text\n                    exJSON.artifact = artifacts\n\n                    text = \"\"\n                    artifacts = []\n                }\n                if (level === \"#\")\n                {\n                    exJSON.name = words.join(\" \")\n                }\n                subJSON.name = words.join(\" \")\n            }\n\n            // Block Quotes\n            if (words[0].charAt(0) === \">\" && !in_code)\n            {\n                block_quote += words.join(\" \").replace(\">\", \"\").replace(/(^[\\s]+|[\\s]+$)/, \"\\n\")                                \n            }\n            else if (block_quote !== \"\")\n            {\n            artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n            block_quote = \"\"\n            }\n\n            // Code Blocks\n            if (words[0].includes(\"```\") && !in_code)\n            {\n                code_block += line + \"\\n\"\n                in_code = true\n            }\n            else if(in_code)\n            {\n                if(line.includes(\"```\"))\n                    in_code = false\n                code_block += line + \"\\n\"\n            }\n            else if (code_block === \"\" && words[0].charAt(0) === \"`\")\n            {\n                code_block += line + '\\n'\n                artifacts.push(this.parseArtifact(code_block, \"code\"))\n                code_block = \"\"\n            }\n            else if ( !in_code && code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }            \n\n            // Images\n            if (words[0].charAt(0) === \"!\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"image\"))\n            }\n\n            // VRMD EXTENDED SYNTAX\n            // Theme\n            if (words[0].charAt(0) === \"$\" && !in_code)\n            {\n                let field = line.substring(line.lastIndexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\n                let textureSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n\n                switch (field) {\n                    default:\n                        break\n                    case 'floor':\n                        exJSON.theme.floor = textureSrc\n                        break\n                    case 'walls':\n                        exJSON.theme.walls = textureSrc\n                        break\n                    case 'ceiling':\n                        exJSON.theme.ceiling = textureSrc\n                        break\n                    case 'frames':\n                        exJSON.theme.frames = textureSrc\n                        break\n                    case 'sky':\n                        exJSON.theme.sky = textureSrc\n                        break\n                }\n                mdLines.splice(i, 1)\n                --i\n            }\n            //3D models (.GLTF)\n            if (words[0].charAt(0) === \"&\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"3D\"))\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Audio\n            if (words[0].charAt(0) === \"^\" && !in_code)\n            {\n                this.addAudio(artifacts, line)\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Hidden Artifact\n            if (words[0] === \"~\" && !in_code)\n            {\n                hidden_block = !hidden_block\n            }\n\n            if (hidden_block || (words[0] === \"~\" && !in_code))\n            {\n                mdLines.splice(i, 1)\n                --i\n            }\n\n            if(this.debug)\n            {\n                console.log(artifacts);\n            }\n\n            text += line + '\\n'\n        }\n\n        if(subJSON.name !== null)\n        {\n            subJSON.text = text\n            subJSON.artifacts = artifacts\n\n            text = \"\"\n            artifacts = []\n\n            exJSON.rooms.push(subJSON)\n            subJSON = {}\n        }        \n        this.tree = exJSON\n        this.cleanedMD = mdLines.join('\\n')\n        \n        return this.tree\n    }\n\n    parse(markDown, maxRooms, maxImages, fileDict = null)\n    {\n        console.log(\"parsing\");        \n        \n        let exJSON = {}\n        exJSON.rooms = []\n        exJSON.theme = {floor: null, walls: null, ceiling: null, frames: null, sky: null}\n\n        let subJSON = {}\n        let artifacts = []\n\n        let level = \"\"\n        let text = \"\"\n\n        let block_quote = \"\"\n        let code_block = \"\"\n\n        let in_code = false\n\n        let hidden_block = false\n        let h3_count = (markDown.match(/\\n### /g) || []).length;\n        console.log('###',h3_count);\n\n        let roomCount = 0\n        let imageCount = 0\n        \n        let mdLines = markDown.split('\\n')\n\n        for(let i = 0; i < mdLines.length; i++)\n        {      \n            let line = mdLines[i]\n            let words = line.split(\" \")                        \n\n            // Headings\n            if (words[0].charAt(0) === \"#\" && !in_code)\n            {\n                if (maxRooms && words[0].includes(\"###\") && h3_count > maxRooms) continue\n                roomCount++\n                if (maxRooms && roomCount > maxRooms) break\n\n\n                level = words.shift()\n\n\n                if(subJSON.name !== null)\n                {\n                    subJSON.text = text\n                    subJSON.artifacts = artifacts\n            \n                    text = \"\"\n                    artifacts = []\n\n                    // if(level === \"#\" || level === \"##\")\n                    // {\n                        exJSON.rooms.push(subJSON)\n                        subJSON = {}\n                        imageCount = 0\n                    // }\n                }\n                else if (text !== \"\")\n                {\n                    exJSON.text = text\n                    exJSON.artifact = artifacts\n\n                    text = \"\"\n                    artifacts = []\n                }\n                if (level === \"#\")\n                {\n                    exJSON.name = words.join(\" \")\n                }\n                subJSON.name = words.join(\" \")\n            }            \n\n            // Block Quotes\n            if (words[0].charAt(0) === \">\" && !in_code)\n            {                \n                block_quote += words.join(\" \").replace(\">\", \"\").replace(/(^[\\s]+|[\\s]+$)/, \"\\n\")                                \n            }\n            else if (block_quote !== \"\")\n            {\n                artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n                block_quote = \"\"\n            }\n\n            // Code Blocks\n            if (words[0].includes(\"```\") && !in_code)\n            {\n                code_block += line + \"\\n\"\n                in_code = true\n            }\n            else if(in_code)\n            {\n                if(line.includes(\"```\"))\n                    in_code = false\n                code_block += line + \"\\n\"\n            }\n            else if (code_block === \"\" && words[0].charAt(0) === \"`\")\n            {\n                code_block += line + '\\n'\n                artifacts.push(this.parseArtifact(code_block, \"code\"))\n                code_block = \"\"\n            }\n            else if ( !in_code && code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }            \n\n            // Images\n            if (words[0].charAt(0) === \"!\" &&!in_code)\n            {\n                if (maxImages)\n                {\n                    let priority = line.substring(line.lastIndexOf(\"{\") + 1, line.lastIndexOf(\"}\"))\n                    if (priority > 1 || imageCount > maxImages) continue\n                }\n                artifacts.push(this.parseArtifact(line, \"image\", fileDict))\n                if(fileDict && fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n                {\n                    mdLines[i] = line.replace(line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\")), fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n                    line = mdLines[i]\n                }\n\n                imageCount++\n            }\n\n            // VRMD EXTENDED SYNTAX\n            // Theme\n            if (words[0].charAt(0) === \"$\" && !in_code)\n            {\n                let field = line.substring(line.lastIndexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\n                let textureSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n\n                if (field != 'sky' && fileDict && fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n                {\n                    textureSrc = fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))]\n                }\n                else\n                {\n                    textureSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n                }\n\n                if(this.VSCode && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(textureSrc)))\n                { \n                    textureSrc = this.VSCode + textureSrc\n                }\n\n                switch (field) {\n                    default:\n                        break\n                    case 'floor':\n                        exJSON.theme.floor = textureSrc\n                        break\n                    case 'walls':\n                        exJSON.theme.walls = textureSrc\n                        break\n                    case 'ceiling':\n                        exJSON.theme.ceiling = textureSrc\n                        break\n                    case 'frames':\n                        exJSON.theme.frames = textureSrc\n                        break\n                    case 'sky':\n                        exJSON.theme.sky = textureSrc\n                        break\n                }\n                mdLines.splice(i, 1)\n                --i\n            }\n            //3D models (.GLTF)\n            if (words[0].charAt(0) === \"&\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"3D\"))\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Attachments\n            if (words[0].charAt(0) === \"^\" && !in_code)\n            {\n                let field = line.substring(line.lastIndexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\n\n                if(field === 'frame')\n                    line = this.addFrame(artifacts, line, fileDict)\n                else\n                    line = this.addAudio(artifacts, line, fileDict)\n\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Hidden Artifact\n            if (words[0] === \"~\" && !in_code)\n            {\n                hidden_block = !hidden_block\n            }\n\n            if (hidden_block || (words[0] === \"~\" && !in_code))\n            {\n                mdLines.splice(i, 1)\n                --i\n                continue\n            }\n\n            text += line + '\\n'\n        }\n\n        if(subJSON.name !== null)\n        {\n            if (block_quote !== \"\")\n            {\n                artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n                block_quote = \"\"\n            }\n            if (code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }\n            subJSON.text = text\n            subJSON.artifacts = artifacts\n\n            text = \"\"\n            artifacts = []\n            exJSON.rooms.push(subJSON)\n            subJSON = {}\n        }        \n        this.tree = exJSON\n        this.cleanedMD = mdLines.join('\\n')\n        \n        return this.tree\n    }\n\n    parseArtifact(text, type, fileDict = null)\n    {        \n        let artifact = {}\n        artifact.type = type\n        artifact.audioSrc = null\n        artifact.frameSrc = null\n\n\n        switch(type)\n        {\n            default:\n                break\n            case 'image':\n                if (fileDict && fileDict[text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))])\n                {\n                    artifact.src = fileDict[text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))]\n                }\n                else\n                {\n                    artifact.src = text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))\n                }\n\n                artifact.alt = text.substring(text.lastIndexOf(\"[\") + 1, text.lastIndexOf(\"]\"))\n                break\n            case 'block quote':\n                artifact.text = text\n                break\n            case 'code':\n                artifact.code = text.replace(/`/g, \"\").replace('\\n', '')\n                break\n            case 'code block':\n                let cleaned = text.replace(/`/g, \"\")\n                artifact.lang = cleaned.split(\"\\n\")[0]\n                artifact.code = cleaned.replace(artifact.lang + '\\n', '')\n                break\n            case '3D':\n                artifact.src = text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))\n                artifact.name = text.substring(text.lastIndexOf(\"[\") + 1, text.lastIndexOf(\"]\"))\n                break\n        }\n\n        if(this.VSCode && artifact.src && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(artifact.src)))\n        {             \n            artifact.src = this.VSCode + artifact.src\n        }\n        return artifact\n    }\n\n    addAudio(artifacts, line, fileDict)\n    {\n        if (fileDict && fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n        {\n            artifacts[artifacts.length - 1].audioSrc = fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))]\n            line = line.replace(line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\")), fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n\n        }\n        else\n        {\n            artifacts[artifacts.length - 1].audioSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n        }\n\n        if(this.VSCode && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(artifacts[artifacts.length - 1].audioSrc)))\n        {\n            artifacts[artifacts.length - 1].audioSrc = this.VSCode + artifacts[artifacts.length - 1].audioSrc\n        }\n\n        return line\n    }\n\n    addFrame(artifacts, line, fileDict)\n    {\n        if (fileDict && fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n        {\n            artifacts[artifacts.length - 1].frameSrc = fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))]\n            line = line.replace(line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\")), fileDict[line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))])\n        }\n        else\n        {\n            artifacts[artifacts.length - 1].frameSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n        }\n\n        if(this.VSCode && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(artifacts[artifacts.length - 1].frameSrc)))\n        {\n            artifacts[artifacts.length - 1].frameSrc = this.VSCode + artifacts[artifacts.length - 1].frameSrc\n        }\n\n        return line\n    }\n}\n\n","import React, {useEffect} from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport hljs from \"highlight.js\"\n\nconst Exhibitdocument = (props) => {\n\n\n    \n    useEffect(()=>{\n        document.getElementById(\"doc-preview\").querySelectorAll(\"pre code\").forEach(block => {\n          hljs.highlightBlock(block);\n        });\n      },[props.md])\n  \n      function flatten(text, child) {\n        return typeof child === 'string'\n          ? text + child\n          : React.Children.toArray(child.props.children).reduce(flatten, text)\n      }\n      \n      function HeadingRenderer(props) {\n        let children = React.Children.toArray(props.children)\n        let text = children.reduce(flatten, '')\n        let slug = text.toLowerCase().replace(/[!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\W/g, '-')\n        return React.createElement('h' + props.level, {id: slug}, props.children)\n      }\n    \n    return(\n    <div id=\"doc-preview\">\n        <ReactMarkdown source={props.md} renderers={{heading: HeadingRenderer}}/>\n    </div>\n)}\n\nexport default Exhibitdocument","import React from \"react\"\nimport {Scene, Entity} from \"aframe-react\"\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\"\n\nconst exhibit = (props) => {\n  \n  let treeString = JSON.stringify(props.tree)  \n  let color = props.tree.theme.sky ? props.tree.theme.sky : \"135, 206, 235\"\n  color = color.includes('#') ? color : `rgb(${color})`\n\n  let cursor = null\n\n  if(props.editor) cursor =  <a-cursor></a-cursor>\n\n\n  return(\n      <Scene id={props.exhibitId} vr-mode-ui=\"enabled: false\" embedded background={`color: ${color}`}>\n        <a-assets>\n            <a-mixin id=\"checkpoint\"></a-mixin>\n            <a-mixin id=\"checkpoint-hovered\" color=\"#6CEEB5\"></a-mixin>\n            <img id=\"wallTexture\" src=\"https://firebasestorage.googleapis.com/v0/b/malloci-8f365.appspot.com/o/images%2Fwall_default.jpg?alt=media&token=4efaf383-4ae0-44f3-af17-f38044e20eb7\"/>\n            <img id=\"floorTexture\" src=\"https://firebasestorage.googleapis.com/v0/b/malloci-8f365.appspot.com/o/images%2Ffloor_default.jpg?alt=media&token=c6f3b161-52b2-4889-bc25-0cdbf7668ba1\"/>\n            <img id=\"ceilingTexture\" src=\"https://firebasestorage.googleapis.com/v0/b/malloci-8f365.appspot.com/o/images%2Fceiling_default.jpg?alt=media&token=aa6c0f19-baed-4f20-9380-c1dc82deed1e\"/>\n            <img id=\"frameTexture\" src=\"/textures/frame.jpg\"/>\n          </a-assets>\n          <a-light type=\"ambient\" position=\"0 6 0\" rotation=\"0 0 45\"></a-light>\n          <Entity id=\"rig\"\n                    movement-controls={{enabled: true}}\n                    position=\"2 0 1\" \n                    rotation=\"0 180 0\">\n            <a-camera id=\"camera\"\n            look-controls=\"pointerLockEnabled: true\">\n            <a-sound  id =\"ambient-track\" src=\"src: url(/audio/light-piano-noodling-in-b.mp3)\" autoplay=\"false\" volume=\"0.4\" loop =\"true\" position=\"0 4 0\"></a-sound>\n              {cursor}\n            </a-camera>\n          <Entity laser-controls={{hand: 'left'}} raycaster={{objects: '.clickable', far: 3}} teleport-controls={{collisionEntities: '.scenery', drawForAllCollisions: false, landingMaxAngle: 45, button: 'trigger', cameraRig: '#rig', teleportOrigin: '#camera'}}></Entity>\n          <Entity laser-controls={{hand: 'right'}} raycaster={{objects: '.clickable', far: 3}} teleport-controls={{collisionEntities: '.scenery', drawForAllCollisions: false, landingMaxAngle: 45, button: 'trigger', cameraRig: '#rig', teleportOrigin: '#camera'}}></Entity>\n        </Entity>\n        <Entity id=\"museum\" \n                malloci={{\n                  tree: treeString,\n                  wallHeight: 5,\n                  base64Mode: props.b64,\n                  debug: props.debug}}></Entity>\n      </Scene>\n)}\n\nexport default exhibit","import React, {useState, useEffect} from 'react';\nimport { Redirect, useParams } from 'react-router-dom'\n\nimport firebase, {database} from \"../firebase/firebase\"\nimport FileDict from '../firebase/FileDictionary'\n\nimport ExhibitText from \"../components/exhibittext\"\nimport ImageFiles from \"../components/imagefiles\"\nimport { Button, Tooltip, Modal } from 'antd';\nimport { Row, Col, Tabs } from 'antd';\nimport Header from \"../components/header\";\nimport { DeleteOutlined } from '@ant-design/icons';\n\nimport Layout from \"../components/layout\"\n\nimport VRMD from \"../malloci/vrmd-parser\"\n\nimport ExhibitDocument from \"../components/exhibitdocument\"\nimport Exhibit from \"../components/exhibit\"\n\nimport \"./editor.css\"\n\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nfunction FileDictConcat(o2) {\n  for (var key in o2) {\n   FileDict[key] = o2[key];\n  }\n  console.log(FileDict);\n  \n }\n\nconst Mallocieditor = () => {\n\n  const { id } = useParams();\n\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null, sky: \"135, 206, 235\"}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  const [md, setMd] = useState('')\n  const [rawMD, setRawMD] = useState(\"# Hello world! \\n\\n> Welcome to the world! \\n\\n## Hello continent \\n\\nThis is a starter exhibit. Hit build to view it in VR. The name of the museum is Hello world!. There is one room, Hello Continent. There's some wall art about baby elephants and a picture of a baby elephant in a bucket. \\n\\n> Baby elephants are endangered \\n\\n![baby elephants are endangered!](https://i.imgur.com/SnolApK.jpg)\")  \n  const [owner, setOwner] = useState('')\n  const [modalVisible, setModalVisible] = useState(false)\n\n  const [redirect, setRedirect] = useState('')\n\n  const updateExhibit = async () => {\n    const vrmdParser = new VRMD()\n    const editor = document.getElementById('editor')\n    let tree = vrmdParser.parse(editor.value, null, null, FileDict)\n    const response = await fetch(\"https://malloci.uc.r.appspot.com/generate\", {\n      method: 'POST', // *GET, POST, PUT, DELETE, etc.\n      mode: 'cors', // no-cors, *cors, same-origin\n      cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: 'omit', // include, *same-origin, omit\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      redirect: 'follow', // manual, *follow, error\n      referrerPolicy: 'no-referrer', // no-referrer, *client\n      body: JSON.stringify(tree) // body data type must match \"Content-Type\" header\n    })\n    if (!response.ok) {\n      console.error(\"bad response, loading user defined tree\")\n      setMuseumTree(tree)\n    }\n    else\n    {\n      tree = await response.json()\n      setMuseumTree(tree)\n    }\n    setMd(vrmdParser.cleanedMD)\n  }\n\n  useEffect(() => {\n    if(id)\n    {\n      let docRef = database.collection(\"exhibits\").doc(id);\n\n      docRef.get().then((doc) => {\n          if (doc.exists) {\n            if(!firebase.auth().currentUser || firebase.auth().currentUser.uid !== doc.data().authorID)\n            {\n              setRedirect(`/Exhibits/${docRef.id}`)\n            }\n            console.log(\"success!!!!\");\n\n            FileDictConcat(JSON.parse(doc.data().fileDict))\n            setOwner(true)\n            setRawMD(doc.data().rawMD)\n          } else {\n              // doc.data() will be undefined in this case\n              console.log(\"No such document!\");\n              setRedirect(`/Exhibits/${docRef.id}`)\n\n          }\n      }).catch(function(error) {\n          console.log(\"Error getting document:\", error);\n          setRedirect(`/Exhibits/${docRef.id}`)\n      });\n    }\n    updateExhibit()\n  },[])\n  \n  const uploadExhibit = () => {\n    console.log(Object.keys(FileDict));\n    if(id)\n    {\n      let docRef = database.collection(\"exhibits\").doc(id);\n      docRef.update({\n        preview: Object.keys(FileDict).length !== 0 ? FileDict[Object.keys(FileDict)[0]] : 'img/Maria.jpg',\n        title: museumTree.name,\n        rawMD: document.getElementById('editor').value,\n        fileDict: JSON.stringify(FileDict),\n        md: md,\n        tree: museumTree\n      })\n      .then(function() {\n          console.log(\"Document successfully updated!\");\n          setRedirect(`/Exhibits/${docRef.id}`)\n      }).catch(function(error) {\n        console.error(\"Error adding document: \", error);\n      });\n    }\n    else\n    {\n      database.collection(\"exhibits\").add({\n        author: firebase.auth().currentUser.displayName,\n        authorID: firebase.auth().currentUser.uid,\n        preview: Object.keys(FileDict).length !== 0 ? FileDict[Object.keys(FileDict)[0]] : 'img/Maria.jpg',\n        title: museumTree.name,\n        rawMD: document.getElementById('editor').value,\n        fileDict: JSON.stringify(FileDict),\n        md: md,\n        tree: museumTree\n      })\n      .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n        setRedirect(`/Exhibits/${docRef.id}`)\n      })\n      .catch(function(error) {\n          console.error(\"Error adding document: \", error);\n      });\n    }\n  }\n\n  const RedirectRenderer = () => {\n    if(redirect !== '') return <Redirect to={redirect} push/>\n    \n  }\n\n  const deleteExhibit = () => {\n      database.collection(\"exhibits\").doc(id).delete().then(function() {\n        console.log(\"Document successfully deleted!\");\n        setRedirect(`/`)\n\n    }).catch(function(error) {\n        console.error(\"Error removing document: \", error);\n    });\n  }\n\n  const DeleteButton = () => {\n    if(owner)\n    {\n      return(\n      <div>\n        <Tooltip title=\"Delete This Exhibit\"><Button type=\"danger\" shape=\"circle\" onClick={() => setModalVisible(true)} icon={<DeleteOutlined />} /></Tooltip>\n        <Modal\n        title=\"Basic Modal\"\n        visible={modalVisible}\n        onOk={() => deleteExhibit()}\n        onCancel={() => setModalVisible(false)}\n        okText=\"Yes, delete this Exhibit.\"\n        okButtonProps = {{ type:\"danger\" }}\n        cancelText=\"Cancel\"\n      >\n        <p>This will permanently delete your exhibit, Would you like to continue?</p>\n\n      </Modal>\n      </div>\n        \n      )\n    }\n  }\n  \n  return (\n   <Layout >\n     <Header siteTitle={\"Create a New Exhibit\"}></Header>\n     <div id=\"alertstyle\">\n     {/* <Alert \n      message=\"Online only!\"\n      description=\"This is an online editor: museums you create using this tool will not be saved! Please copy your text from the Markdown panel before you close your session.\"\n      type=\"info\"\n      showIcon closable\n    /> */}\n    </div>\n     <Row>\n     <Col classname=\"gutter-col\">\n        <div className=\"description\">\n            <p>A web editor to view museums written in markdown.<br></br>      \n            Create your exhibit in the panel on the left; there's a guide detailing the markdown syntax you should use. View your exhibit space in the \"Exhibit\" tab of panel on the right. The \"Document\" tab will contain an article of your exhibit instead.<br></br>\n            The editor area in the \"Markdown\" panel contains basic buttons to help you with the markdown syntax. You can click on the H icon to add a header, the link icon to link images, the blockquote icon to add a quote, and so on. In the event that you're using images from the internet in your exhibit via links, make sure that you're using images which are marked for reuse (they'll be blocked by your browser and won't show up, otherwise).\n            </p>\n        </div>\n    </Col>\n     </Row>\n    <Row>\n      <Col className=\"gutter-col\" span={12}>\n          <div className=\"gutter-row\" id=\"exhibittext\">\n            <ExhibitText value={rawMD} />\n          </div>\n\n          <div className=\"gutter-row\">\n            <Button onClick={() => {updateExhibit()}} id=\"build-exhibit\" type=\"primary\">Build</Button>\n          </div>\n        \n          <div className=\"gutter-row\" id=\"imageupload\">\n            <ImageFiles></ImageFiles>\n          </div>\n        \n      </Col>\n      <Col className=\"gutter-col\" span={12}>\n      <div className=\"gutter-row\" id=\"exhibitmaster\">\n          <div className=\"card-container\">\n            <Tabs onChange={callback} type=\"card\">\n                <TabPane id=\"exhibit_pane\" tab=\"Exhibit\" key=\"1\">\n                    <Exhibit exhibitId=\"preview\" tree={museumTree} editor={true} debug={true}/>\n                </TabPane>\n        \n                <TabPane tab=\"Document\" key=\"2\">\n                    <ExhibitDocument md={md} />\n                </TabPane>\n          </Tabs>\n          </div>\n        </div>\n        <div className=\"gutter-row\">\n            {DeleteButton()}\n            <Button onClick={() => {uploadExhibit()}} id=\"create-exhibit\" type=\"primary\">Publish</Button>\n          </div>\n      </Col>\n    </Row>\n    {RedirectRenderer()}\n  </Layout>\n  );\n}\n\nexport default Mallocieditor;\n","import React from \"react\"\n\nimport { Upload, message, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst props = {\n    name: 'file',\n    multiple: true,\n    customRequest(data) {\n      let reader = new FileReader();      \n      reader.readAsBinaryString(data.file);\n      reader.onload = function(e) {\n          let bits = e.target.result; \n\n          let src = `${data.file.name}`\n\n          sessionStorage.setItem(src, bits)\n      }\n    },\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n  };\n  \nconst ImageFiles = () => (\n    <Upload {...props}>\n      <Button>\n        <UploadOutlined /> Upload\n      </Button>\n    </Upload>\n  )\n\nexport default ImageFiles","import React, {useState, useEffect} from 'react';\nimport { Redirect } from 'react-router-dom'\n\nimport firebase from \"../firebase/firebase\"\n\nimport ExhibitText from \"../components/exhibittext\"\nimport PGImageFiles from \"../components/pgimagefiles\"\nimport { Button } from 'antd';\nimport { Row, Col, Tabs } from 'antd';\nimport Header from \"../components/header\";\nimport { Alert } from 'antd';\nimport Layout from \"../components/layout\"\n\nimport VRMD from \"../malloci/vrmd-parser\"\n\nimport ExhibitDocument from \"../components/exhibitdocument\"\nimport Exhibit from \"../components/exhibit\"\n\nimport \"./editor.css\"\n\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\n\nfunction Playground() {\n\n  const initValue = \"# Hello world! \\n\\n> Welcome to the world! \\n\\n## Hello continent \\n\\nThis is a starter exhibit. Hit build to view it in VR. The name of the museum is Hello world!. There is one room, Hello Continent. There's some wall art about baby elephants and a picture of a baby elephant in a bucket. \\n\\n> Baby elephants are endangered \\n\\n![baby elephants are endangered!](https://i.imgur.com/SnolApK.jpg)\"\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null, sky: \"135, 206, 235\"}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  const [md, setMd] = useState('')  \n\n  const updateExhibit = () => {\n  \n    const vrmdParser = new VRMD()\n    const editor = document.getElementById('editor')\n    console.log('editor value', editor)\n    let tree = vrmdParser.parse(editor.value, null, null)\n    setMuseumTree(tree)\n    setMd(vrmdParser.cleanedMD)\n  }\n\n  useEffect(function() {\n    updateExhibit()\n  },[])\n\n  const goToEditor = () => {\n    if(firebase.auth().currentUser && firebase.auth().currentUser.email.match(\".*berkeley[.]edu\")) return <Redirect to={`/Editor`} push/>\n    }\n  \n  return (\n    \n   <Layout >\n     <Header siteTitle={\"Playground\"}></Header>\n     <div id=\"alertstyle\">\n     <Alert \n      message=\"Demo only!\"\n      description=\"This is a demo editor: museums you create using this tool will not be saved! Please copy your text from the Markdown panel before you close your session.\"\n      type=\"info\"\n      showIcon closable\n    />\n    </div>\n     <Row>\n     <Col classname=\"gutter-col\">\n        <div className=\"description\">\n            <p>A web editor to view museums written in markdown.<br></br>      \n            Create your exhibit in the panel on the left; there's a guide detailing the markdown syntax you should use. View your exhibit space in the \"Exhibit\" tab of panel on the right. The \"Document\" tab will contain an article of your exhibit instead.<br></br>\n            The editor area in the \"Markdown\" panel contains basic buttons to help you with the markdown syntax. You can click on the H icon to add a header, the link icon to link images, the blockquote icon to add a quote, and so on. In the event that you're using images from the internet in your exhibit via links, make sure that you're using images which are marked for reuse (they'll be blocked by your browser and won't show up, otherwise).\n            </p>\n        </div>\n    </Col>\n     </Row>\n    <Row>\n      <Col className=\"gutter-col\" span={12}>\n          <div className=\"gutter-row\" id=\"exhibittext\">\n            <ExhibitText value = {initValue} />\n          </div>\n\n          <div className=\"gutter-row\">\n            <Button onClick={() => {updateExhibit()}} id=\"build-exhibit\" type=\"primary\">Build</Button>\n          </div>\n        \n          <div className=\"gutter-row\" id=\"imageupload\">\n            <PGImageFiles></PGImageFiles>\n          </div>\n        \n      </Col>\n      <Col className=\"gutter-col\" span={12}>\n      <div id=\"exhibitmaster\">\n          <div className=\"card-container\">\n            <Tabs onChange={callback} type=\"card\">\n                <TabPane id=\"exhibit_pane\" tab=\"Exhibit\" key=\"1\">\n                    <Exhibit exhibitId=\"preview\" tree={museumTree} b64={true} editor={true} debug={true}/>\n                </TabPane>\n        \n                <TabPane tab=\"Document\" key=\"2\">\n                    <ExhibitDocument md={md} />\n                </TabPane>\n          </Tabs>\n          </div>\n        </div>\n      </Col>\n    </Row>\n    {goToEditor()}\n  </Layout>\n  );\n}\n\nexport default Playground;","import React, {useState, useEffect} from \"react\"\nimport \"react-markdown\"\nimport hljs from \"highlight.js\"\nimport VRMD from \"../malloci/vrmd-parser\"\nimport Layout from \"../components/layout\"\nimport Exhibit from \"../components/exhibit\"\nimport './museum.css'\nimport { Typography } from 'antd';\nimport ReactMarkdown from \"react-markdown\"\n\n// const heroimg = '../logo.svg'\nconst Museum = () => {\n\n  let [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  let[md, setMd] = useState('')\n\n  const vrmdParser = new VRMD()\n\n    useEffect(() => {\n      fetch(\"https://raw.githubusercontent.com/mallocivr/mallocivr.github.io/master/markDown/home.md\")\n      .then(res => res.text())\n      .then(post => {\n        vrmdParser.parse(post)\n        setMd(vrmdParser.cleanedMD)\n        setMuseumTree(vrmdParser.tree)\n      })\n      .catch((err) => console.error(err));\n    }, [])\n\n    useEffect(()=>{\n      document.getElementById(\"md_article\").querySelectorAll(\"pre code\").forEach(block => {\n        hljs.highlightBlock(block);\n      });\n    },[md])\n\n    function flatten(text, child) {\n      return typeof child === 'string'\n        ? text + child\n        : React.Children.toArray(child.props.children).reduce(flatten, text)\n    }\n    \n    function HeadingRenderer(props) {\n      let children = React.Children.toArray(props.children)\n      let text = children.reduce(flatten, '')\n      let slug = text.toLowerCase().replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g,\"\").replace(/\\W/g, '-')\n      return React.createElement('h' + props.level, {id: slug}, props.children)\n    }\n\n\n  \n  return(\n  <Layout >\n    <Typography >\n    {/* <Header siteTitle={\"Malloci\"}></Header> */}\n    {/* <Row id=\"hero\">\n      <Col className=\"heroimg\" span={12}>\n        \n      </Col>\n      <Col className=\"herotext\" span={12}>\n        <h1>Malloci</h1>\n      </Col>\n    </Row> */}\n\n    <div className=\"museum\">\n      {/* <img className=\"heroimg\" src={heroimg}></img> */}\n      <div id=\"md_article\" className=\"museumtext\">\n        <ReactMarkdown source={md} renderers={{heading: HeadingRenderer}}/>\n      </div>\n    </div>\n    <Exhibit exhibitId=\"exhibit\" tree= {museumTree} b64={false} debug={true}/>\n    </Typography>\n  </Layout>\n)};\n\nexport default Museum","import React, {useState, useEffect} from \"react\"\nimport {database} from \"../firebase/firebase\"\nimport {Link} from 'react-router-dom';\nimport Layout from \"../components/layout\"\nimport \"./gallery.css\"\nimport { Card } from 'antd';\n\nimport Header from \"../components/header\";\n\nconst { Meta } = Card;\n\nconst Gallery = () => {\n  const [tiles, setTiles] = useState([])\n\n  useEffect(function() {\n    database.collection(\"exhibits\").get().then((querySnapshot) => {\n      let exhibits = querySnapshot.docs.map((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          return(\n            <Link to={`/Exhibits/${doc.id}`}>\n              <Card className=\"card-space\"\n                hoverable\n                style={{ width: 300 }}\n                cover={<img alt=\"example\" src={doc.data().preview} />}\n              >\n              <Meta title={doc.data().title}/>\n              </Card>     \n            </Link>\n          )\n      });\n\n      setTiles(exhibits)\n    });\n  },[])    \n\n  \n  return(\n    <Layout >\n     <Header siteTitle={\"The Malloci Gallery\"} ></Header>\n    <div className=\"description\">\n        <p>A curation of VR museums generated using Malloci.</p>\n    </div>\n    <div className=\"mastercard\">\n    <Link to={`/WikiViewer`}>\n      <Card className=\"card-space\"\n        hoverable\n        style={{ width: 300 }}\n        cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Wikipedia-logo-en-big.png/627px-Wikipedia-logo-en-big.png\" />}\n      >\n      <Meta title=\"Explore Wikipedia with Malloci\"/>\n      </Card>     \n    </Link>\n    {tiles}\n  {/* <Card className=\"card-space\"\n    hoverable\n    style={{ width: 300 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"The Other Auroras\" description=\"Northern lights over Iceland\" />\n  </Card> */}\n  </div>\n  </Layout>\n)};\n\n\nexport default Gallery","import React, {useState, useEffect} from \"react\"\nimport {database} from \"../firebase/firebase\"\nimport {Link} from 'react-router-dom';\nimport Layout from \"../components/layout\"\nimport \"./gallery.css\"\nimport { Card } from 'antd';\n\nimport Header from \"../components/header\";\n\nconst { Meta } = Card;\n\nconst Home = () => {\n  const [tiles, setTiles] = useState([])\n\n  useEffect(function() {\n    database.collection(\"exhibits\").get().then((querySnapshot) => {\n      let exhibits = querySnapshot.docs.map((doc) => {\n          // doc.data() is never undefined for query doc snapshots\n          console.log(doc.id, \" => \", doc.data());\n          return(\n            <Link to={`/Exhibits/${doc.id}`}>\n              <Card className=\"card-space\"\n                hoverable\n                style={{ width: 300 }}\n                cover={<img alt=\"example\" src={doc.data().preview} />}\n              >\n              <Meta title={doc.data().title}/>\n              </Card>     \n            </Link>\n          )\n      });\n\n      setTiles(exhibits)\n    });\n  },[])    \n\n  \n  return(\n    <Layout >\n     <Header siteTitle={\"Malloci - VR you can understand\"} ></Header>\n    <div className=\"description\">\n        <p>Malloci makes creating VR experiences for the web fast and easy.</p>\n    </div>\n    <div className=\"mastercard\">\n    <Link to={`/WikiViewer`}>\n      <Card className=\"card-space\"\n        hoverable\n        style={{ width: 300 }}\n        cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Wikipedia-logo-en-big.png/627px-Wikipedia-logo-en-big.png\" />}\n      >\n      <Meta title=\"Explore Wikipedia with Malloci\"/>\n      </Card>     \n    </Link>\n    {tiles}\n  {/* <Card className=\"card-space\"\n    hoverable\n    style={{ width: 300 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"The Other Auroras\" description=\"Northern lights over Iceland\" />\n  </Card> */}\n  </div>\n  </Layout>\n)};\n\n\nexport default Home","import React, {useState, useEffect} from \"react\"\nimport firebase, {database} from \"../firebase/firebase\"\nimport {Link, useParams } from 'react-router-dom';\nimport hljs from \"highlight.js\"\nimport Layout from \"../components/layout\"\nimport Exhibit from \"../components/exhibit\"\nimport {Tooltip, Button, Typography } from 'antd';\nimport { EditOutlined } from '@ant-design/icons';\n  \nimport './museum.css'\nimport ReactMarkdown from \"react-markdown\"\n\nconst Example = () => {\n\n  const { exhibit } = useParams();\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, frames: null, walls: null, ceiling: null, sky: '255,0,0'}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  const [md, setMd] = useState('')\n\n  const [isOwner, setIsOwner] = useState(false)\n\n    useEffect(() => {\n      var docRef = database.collection(\"exhibits\").doc(exhibit);\n\n      docRef.get().then(function(doc) {\n          if (doc.exists) {\n            if(firebase.auth().currentUser && firebase.auth().currentUser.uid === doc.data().authorID)\n            {\n              setIsOwner(true)\n            }\n              setMd(doc.data().md)\n              setMuseumTree(doc.data().tree)\n          } else {\n              // doc.data() will be undefined in this case\n              console.log(\"No such document!\");\n          }\n      }).catch(function(error) {\n          console.log(\"Error getting document:\", error);\n      });\n    }, [])\n\n    useEffect(()=>{\n      document.getElementById(\"md_article\").querySelectorAll(\"pre code\").forEach(block => {\n        hljs.highlightBlock(block);\n      });\n    },[md])\n\n    function flatten(text, child) {\n      return typeof child === 'string'\n        ? text + child\n        : React.Children.toArray(child.props.children).reduce(flatten, text)\n    }\n    \n    function HeadingRenderer(props) {\n      let children = React.Children.toArray(props.children)\n      let text = children.reduce(flatten, '')\n      let slug = text.toLowerCase().replace(/[.,\\/#!$%\\^&\\*;:{}=_`~()?]/g,\"\").replace(/[ ’]/g, '-')\n      return React.createElement('h' + props.level, {id: slug}, props.children)\n    }\n\n    function ImageRenderer(props) {\n      return <p><img {...props} /></p>\n    }\n\n    function checkOwnerShip(){\n      if(isOwner)\n      {\n        return <Link to={`/Editor/${exhibit}`}><Tooltip title=\"Edit This Exhibit\"><Button type=\"default\" shape=\"circle\" icon={<EditOutlined />} /></Tooltip></Link>\n      }\n    }\n  \n  return(\n  <Layout >\n    <Typography>\n    <div className=\"museum\">\n      {/* <img className=\"m\" src={heroimg}></img> */}\n      <div id=\"md_article\" className=\"museumtext\">\n        {checkOwnerShip()}\n        <ReactMarkdown source={md} renderers={{heading: HeadingRenderer, image: ImageRenderer}}/>\n      </div>\n    </div>\n    </Typography>\n    <Exhibit exhibitId=\"exhibit\" tree= {museumTree} b64={false} debug={true}/>\n  </Layout>\n)};\n\nexport default Example","import React, {useState} from \"react\"\nimport Layout from \"../components/layout\"\nimport \"./gallery.css\"\nimport { Card } from 'antd';\n\nimport Header from \"../components/header\";\n\nconst { Meta } = Card;\n\nconst About = () => (\n    <Layout >\n     <Header siteTitle={\"About us\"} ></Header>\n    <div className=\"description\">\n        <p>The team behind Malloci</p>\n    </div>\n    <div className=\"mastercard\">\n<Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Masha Belyi\" description=\"NLP Engineer\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Michael Gutensohn\" description=\"Product Owner + VR Software Engineer\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Jennifer Momoh\" description=\"Quantitative UX Researcher\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Sharanya Soundararajan\" description=\"Rabbit\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Yejun Wu\" description=\"VR Experience Designer\" />\n  </Card>\n  </div>\n  </Layout>\n);\n\n\nexport default About","/* \n\nlet wiki = new WikiParser()\n\n// Search wiki pages\nwiki.search(\"Memory\", 10, function(response){\n  console.log(response);\n}) \n\n// Parse wiki page into markdown\nwiki.parse(\"University_of_California,_Berkeley\", function(markDown){\n  console.log(markDown);\n}) \n\n// To include linked images in markdown use parseFull\nwiki.parseFull(\"Spain\", 10, function(markDown){\n  // do something with the markdown\n  console.log(markDown);\n})\n\n\n*/\n\nexport default class WikiParser {\n  constructor() {\n    this.api = \"https://en.wikipedia.org/w/api.php\";\n    this.fetchUrl = this.api + \"?origin=*&action=parse&prop=text&format=json&page=\"\n  }\n    \n  search(query, limit, onready) {\n    var params = {\n      action: \"opensearch\",\n      list: \"search\",\n      search: query,\n      format: \"json\",\n      limit: limit\n    };\n\n    var url = this.api + \"?origin=*\";\n    Object.keys(params).forEach(function(key){url += \"&\" + key + \"=\" + params[key];});\n\n    fetch(url)\n      .then(function(response){return response.json();})\n      .then(function(response) {\n        // console.log(response);\n        onready(response)\n      })\n      .catch(function(error){console.log(error);});\n  }\n  \n  parse(page, maxRooms, maxImages, onready) {\n    var self = this;\n    fetch(this.fetchUrl+page)\n      .then(function(resp) { return resp.json();})\n      .then(function(data) {\n\n      var html = '<body>' + data.parse.text['*'] + '</body>'\n      \n      self.htmlToMd(data.parse.title, html, maxRooms, false, maxImages)\n      onready(self.md.join(\"\\n\\n\"));\n    });\n  }\n  \n  parseFull(page, maxRooms, maxImages, onready) {\n    var self = this;\n    fetch(this.fetchUrl+page)\n      .then(function(resp) { return resp.json();})\n      .then(function(data) {\n\n      var html = '<body>' + data.parse.text['*'] + '</body>'\n      //var md = [\"# \" + data.parse.title]\n      //md = md.concat(self.htmlToMd(html))\n      self.htmlToMd(data.parse.title, html, maxRooms, true, maxImages)\n      //self.md = md\n      /* md = md.join(\"\\n\\n\") */\n      /* onready(md) */\n      self.waitForImages(10, onready) // wait up to 10 seconds for Images\n    });\n  }\n  \n  page_summary(pageName, onready) {\n    if (pageName==null){return {}}\n    var url = \"https://en.wikipedia.org/api/rest_v1/page/summary/\"+encodeURIComponent(pageName.replace(/ /g, '_'));\n    //console.log(url)\n    fetch(url)\n      .then(function(response){return response.json();})\n      .then(function(response) {\n        // console.log(response);\n        onready(response)\n      })\n      .catch(function(error){console.log(error);});\n  }\n  \n  cleanText(text) {\n    // remove citations eg: [10], [1][2]\n    text = text.replace(/ *\\[[^\\]]*\\]/g, '')\n    \n    // remove extra spaces\n    text = text.replace(/\\s+/, ' ')\n    text = text.replace(/^\\s+|\\s+$/g, '')\n    \n    return text\n  }\n  \n htmlToMd(title, html, maxRooms, parseImages, maxImages) {\n    // Input: HTML string\n    // Returns: array of markdown strings\n    \n    var numRooms = 1; // control the number of rooms in the exhibit\n    \n    var numImages = 0;\n    if (maxImages == null) {maxImages = 500;}\n    \n    this.waitForImage = 0;\n    this.imgPlaceholder = {};\n    var md = [\"# \" +title]\n    this.md = md;\n    \n    var parser = new DOMParser();\n    var document = parser.parseFromString(html,\"text/xml\");\n    \n    var content = document.getElementsByClassName(\"mw-parser-output\")\n    // var paragraphs = xmlDoc.getElementsByTagName(\"p\");\n    var children = content[0].childNodes\n    for (var i = 0; i < children.length; i++)  {\n            \n      var node = children[i];\n      \n      if (node.className == \"mw-empty-elt\") {\n        continue\n      }\n      // plain text\n      if (node.nodeName == \"p\") {\n        // watch for stupid coordinates\n        if (node.textContent.startsWith(\"Coordinates: \")){continue;}\n        \n        md.push(this.cleanText(node.textContent))\n        \n        if (!parseImages) { continue; }\n        \n        // look for links with images\n        var links = node.getElementsByTagName(\"a\");\n        for (var linkId = 0; linkId < links.length; linkId++) {\n          // dont fecth more images if already maxed out\n          if (numImages >= maxImages){break;}\n          \n          var el = links[linkId]\n          var pageName = el.getAttribute(\"title\");\n          \n          // Get out before its too late!\n          // (to escape with prob 0.5 can use || Math.random() < 0.5)\n          if (pageName == null || el.className == \"new\" || pageName == \"Geographic coordinate system\") {continue}\n          \n          // Grab an image, if possible\n          // - push placeholder to the md array\n          // - once the image comes back from wiki- will replace the placeholder entry\n          // - if there is an error - the placeholder will be removed in waitForImages\n          var imgIdx = md.length;\n          if (pageName in this.imgPlaceholder) {\n            // already got this image earlier!\n            continue\n          }\n          this.imgPlaceholder[pageName] = imgIdx;\n          //console.log('placeholder for ' + pageName + ' at idx ' + imgIdx)\n          this.waitForImage++;\n          md.push(\"~\\n![\"+pageName+\"](placeholder)\\n~\")\n\n          // ask Wiki for image please\n          var self = this;\n          this.page_summary(pageName, function(response){\n            //console.log(response);\n            if ('originalimage' in response) {\n              //console.log('updating artifact ' + response.title + ' ' + self.imgPlaceholder[response.title])\n\n              var size = Math.min(response.originalimage.height, response.originalimage.width);\n              if (size >= 400) { // only want large images\n\n                var caption = response.title;\n                if ('extract' in response) {\n                  // make caption the first sentese of the description\n                  caption = response.extract\n                  caption = caption.replace(/\\n/g, '').replace(/([.?!])\\s*(?=[A-Z])/g, \"$1|\").split(\"|\")[0]\n                }\n                self.md[self.imgPlaceholder[response.title]] = \"~\\n![\"+caption+\"](\"+response.originalimage.source+\"){2}\\n~\";\n                delete self.imgPlaceholder[response.title]; // remove from queue\n              }\n              \n            }\n            self.waitForImage--; // remove from queue\n          }); \n          \n          numImages++;\n        }\n        \n      }\n      \n      // headers\n      else if (node.nodeName.startsWith(\"h\")) {\n        var header = this.cleanText(node.textContent)\n        // if reached References - time to peace out\n        // TODO also \"see also\" and \"notes\"\n        if (header == \"References\" ||\n            header == \"See also\" ||\n            header == \"Notes\") {\n            break;\n        }\n        \n        // also if parsed too many images already - \n        // don't parse any new rooms\n        /* if (numImages >= maxImages){break;} */\n        numImages = 0 // reset image count\n        \n        // dont parse more than maxRooms\n        numRooms++;\n        if (maxRooms != null && numRooms > maxRooms) {\n          break;\n        }\n        \n        var pref = \"#\".repeat(parseInt(node.nodeName.charAt(1)))\n        md.push(pref + \" \" + header)\n      }\n      \n      // images\n      else if (node.nodeName === \"div\" && node.className.includes(\"thumb\")) {\n      \n        // dont fecth more images if already maxed out\n        if (numImages >= maxImages){continue;}\n          \n        var images = node.getElementsByTagName(\"img\")\n        var captions = node.getElementsByClassName(\"thumbcaption\")\n        \n        for (var j = 0; j < images.length; j++) {\n          var w = images[j].getAttribute('data-file-width') // max width of image\n          var src = \"https:\" + images[j].getAttribute('src').replace(/\\d+px/, w+'px')\n          //md.push(\"![\"+this.cleanText(captions[j].textContent)+\"](\"+src+\")\")\n          md.push(\"![\"+this.cleanText(captions[j] ? captions[j].textContent : \"\") +\"](\"+src+\"){1}\")\n          numImages++;\n        }\n      }\n      \n      // lists\n      else if (node.nodeName == \"ol\" || node.nodeName == \"ul\") {\n        var isOrdered = node.nodeName == \"ol\"\n        var items = node.getElementsByTagName(\"li\")\n        var listMD = []\n        for (var l = 0; l < items.length; l++ ){\n          var bullet = isOrdered ? ((l+1)+\".\") : \"*\";\n          listMD.push(bullet + \" \" + this.cleanText(items[l].textContent))\n        }\n        md.push(listMD.join(\"\\n\"))\n      }\n      \n    }\n    \n    return md\n  }\n  \n  waitForImages(limit, onready) {\n    /*\n      Waits for the image queue to empty before\n      returning parsed MarkDown to client.\n      \n      LIMIT: max time in seconds to wait\n      ONREADY: claccback to trigger once everything id ready\n    */\n    var self = this\n    console.log(\"waiting: \" + limit)\n    if (this.waitForImage > 0 && limit > 0){\n      // waaaait for ittttttt\n      setTimeout(function(){self.waitForImages(limit-2, onready)}, 2000);\n    }\n    else {\n      // delete all remaining placeholders\n      var removeIdx =[]\n      for (const key in this.imgPlaceholder) {\n        removeIdx.push(this.imgPlaceholder[key])\n      }\n      removeIdx.sort(function(a,b){ return b - a; });\n      console.log(removeIdx)\n      for (var i = 0; i < removeIdx.length; i++) {\n        this.md.splice(removeIdx[i],1);\n      }\n      \n      onready(this.md.join(\"\\n\\n\"));\n    }\n  }\n}","import React, {useState, useEffect} from \"react\"\nimport hljs from \"highlight.js\"\nimport Layout from \"../components/layout\"\nimport Exhibit from \"../components/exhibit\"\nimport { AutoComplete, Typography } from 'antd';\n\nimport WikiParser from \"../malloci/wiki-parser\"\nimport VRMD from \"../malloci/vrmd-parser\"\nimport './wiki.css'\n\nconst WikiViewer = () => {\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n\n  const wikiParser = new WikiParser()\n  const vrmdParser = new VRMD()\n\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n\n  const formatOptions = (vals) => {\n    return vals.map((val) => {\n        return {value: val}\n    })\n  };\n\n  const onSearch = searchText => {\n    wikiParser.search(searchText, 10, function(resp){       \n        setOptions(formatOptions(resp[1]));\n    })\n  };\n\n  const onSelect = (data) => {\n    console.log('onSelect', data);\n    wikiParser.parseFull(data.replace(/ /g, \"_\"), null, null, async function(markDown){\n        \n        let tree = vrmdParser.parse(markDown, 10, 3)\n        tree.maxPerRoom = 4\n        console.log(JSON.stringify(tree));\n\n        const response = await fetch(\"https://malloci.uc.r.appspot.com/generate\", {\n        method: 'POST', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'omit', // include, *same-origin, omit\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *client\n        body: JSON.stringify(tree) // body data type must match \"Content-Type\" header\n        })\n        if (!response.ok) {\n        console.error(\"bad response, loading user defined tree\")\n\n        setMuseumTree(tree)\n        }\n        else\n        {\n        tree = await response.json()\n        \n        setMuseumTree(tree)\n        }\n\n    })\n  };\n\n  const onChange = data => {\n    setValue(data);\n  };\n  \n  return(\n  <Layout >\n    <Typography>\n      <AutoComplete\n        value={value}\n        options={options}\n        style={{\n          width: '70vw',\n          margin: '10px auto',\n          position: 'absolute',\n          left: '26px',\n          zIndex: '2',\n        }}\n        onSelect={onSelect}\n        onSearch={onSearch}\n        onChange={onChange}\n        placeholder=\"Search Wikipedia\"\n      />\n    </Typography>\n    <Exhibit exhibitId=\"wiki-exhibit\" tree={museumTree} b64={false} debug={true}/>\n  </Layout>\n)};\n\nexport default WikiViewer","import React, {useState, useEffect} from \"react\"\nimport firebase from \"./firebase/firebase\"\nimport './App.css'\nimport {\n  HashRouter as Router,\n  Redirect,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Menu } from 'antd';\nimport Mallocieditor from \"./pages/mallocieditor\"\nimport Playground from \"./pages/playground\"\nimport Museum from \"./pages/museum\"\nimport Gallery from \"./pages/gallery\"\nimport Home from \"./pages/Home\"\nimport Example from \"./pages/example\"\nimport About from \"./pages/about\"\nimport WikiViewer from \"./pages/wikiviewer\"\n\n\nconst logo = \"./logo192.png\"\n\nconst App = () => {\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [redirectOnLogOut, setRedirectOnLogout] = useState(false)\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((user) => {\n      if (user) {\n        setLoggedIn(true)\n      }\n      else\n      {\n        setLoggedIn(false)\n      }\n   });\n  },[])\n\n  const editor = () => {\n    if (loggedIn && firebase.auth().currentUser.email.match(\".*berkeley[.]edu\"))\n    {\n      return(\n        <NavLink to=\"/Editor\">\n                  Create\n        </NavLink>\n      )\n    }\n    else\n    {\n      return(\n        <NavLink to=\"/Playground\">\n                  Playground\n        </NavLink>\n      )\n    }\n  } \n\n  const logout = () => {\n    firebase.auth().signOut()\n    setRedirectOnLogout(true)\n  }\n\n  const login = () => {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider)\n    setRedirectOnLogout(false)\n  }\n\n  const signInOut = () => {\n    if (loggedIn)\n    {\n      return(\n        <a onClick={() => {logout()}}>\n                  Sign Out\n        </a>\n      )\n    }\n    else\n    {\n      return(\n        <a onClick={() => {login()}}>\n                  Sign In\n        </a>\n      )\n    }\n  }\n  \n  const RedirectRenderer = () => {\n    if(redirectOnLogOut) return <Redirect to='/' push/> \n  }\n    return (\n     <div id=\"navbar\">\n       <a href=\"/\"><img src={logo} id=\"logoformatting\"></img></a>\n\n      <div id=\"mallocititle\"><h2><a href=\"/\">Malloci</a></h2></div>\n\n\n    <Router>\n      <div id=\"menualign\">\n        \n            <Menu mode=\"horizontal\">\n              <Menu.Item key=\"gallery\">\n                <NavLink to=\"/Gallery\">\n                  Gallery\n                </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"museum\">\n                <NavLink to=\"/Malloci\">\n                About Malloci\n                </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"mallocieditor\">\n                {editor()}\n              </Menu.Item>\n              \n\n              {/* <Menu.Item key=\"about\">\n              <NavLink to=\"/TheTeam\">\n                The team\n                </NavLink>\n    </Menu.Item> */}\n            </Menu>\n            \n      </div>\n      <div id=\"signInOut\">\n        <Menu>\n          <Menu.Item key=\"signin\">\n            {signInOut()}\n          </Menu.Item>\n        </Menu>\n      </div>\n        <Switch>\n        <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/Gallery\">\n            <Gallery />\n          </Route>\n          <Route exact path=\"/Playground\">\n            <Playground />\n          </Route>\n          <Route exact path=\"/Editor\">\n            <Mallocieditor />\n          </Route>\n          <Route exact path=\"/Malloci\">\n            <Museum />\n          </Route>\n          <Route path=\"/exhibits/:exhibit\">\n            <Example/>\n          </Route>\n          <Route path=\"/Editor/:id\">\n            <Mallocieditor />\n          </Route>\n          <Route exact path=\"/TheTeam\">\n            <About />\n          </Route>\n          <Route exact path=\"/WikiViewer\">\n            <WikiViewer />\n          </Route>\n          {/* <Route exact path=\"/SignIn\">\n            <SignIn />\n          </Route> */}\n        </Switch>\n        {RedirectRenderer()}\n\n      </Router>\n     </div>\n    );\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}