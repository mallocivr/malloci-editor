{"version":3,"sources":["components/markdownguidetablerooms.js","components/markdownguidetableartifact.js","components/markdownguide.js","components/exhibittext.js","components/imagefiles.js","components/header.js","components/layout.js","malloci/vrmd-parser.js","components/exhibitdocument.js","components/exhibit.js","pages/mallocieditor.js","pages/museum.js","pages/gallery.js","pages/example.js","pages/about.js","App.js","serviceWorker.js","index.js"],"names":["columns","title","className","dataIndex","data1","key","markdown","rendered","markdownguidetablerooms","id","dataSource","bordered","pagination","markdownguidetableartifact","Panel","Collapse","markdownguide","defaultActiveKey","header","TextArea","Input","TabPane","Tabs","callback","console","log","exhibittext","onChange","type","tab","placeholder","props","name","multiple","customRequest","data","reader","FileReader","readAsBinaryString","file","onload","e","bits","target","result","src","sessionStorage","setItem","info","status","fileList","message","success","error","ImageFiles","UploadOutlined","Header","siteTitle","defaultProps","Layout","children","style","margin","padding","Date","getFullYear","VRMD","VSCode","debug","this","tree","cleanedMD","mdListString","exJSON","floor","walls","ceiling","subJSON","artifacts","level","text","block_quote","code_block","in_code","hidden_block","mdLines","split","i","length","line","words","charAt","includes","shift","rooms","push","artifact","join","parseArtifact","replace","field","substring","lastIndexOf","textureSrc","theme","splice","addAudio","markDown","test","audioSrc","alt","code","cleaned","lang","audio","Exhibitdocument","flatten","child","React","Children","toArray","reduce","useEffect","document","getElementById","querySelectorAll","forEach","block","hljs","highlightBlock","md","source","renderers","heading","slug","toLowerCase","createElement","exhibit","treeString","JSON","stringify","cursor","b64","exhibitId","vr-mode-ui","embedded","background","color","position","rotation","movement-controls","enabled","look-controls","autoplay","volume","loop","laser-controls","hand","raycaster","objects","far","teleport-controls","collisionEntities","drawForAllCollisions","landingMaxAngle","button","cameraRig","teleportOrigin","malloci","hallWidth","wallHeight","API","base64Mode","Mallocieditor","useState","museumTree","setMuseumTree","setMd","description","showIcon","closable","classname","span","onClick","vrmdParser","editor","parse","value","updateExhibit","Museum","fetch","then","res","post","catch","err","Meta","Card","Gallery","to","hoverable","width","cover","Example","useParams","About","App","href","mode","Item","exact","path","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.35771a75.chunk.js","sourcesContent":["import React from \"react\"\n\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Markdown',\n      className: 'markdown',\n      dataIndex: 'markdown',\n    },\n    {\n      title: 'Rendered',\n      className: 'rendered',\n      dataIndex: 'rendered',\n    },\n  ];\n  \n  const data1 = [\n    {\n      key: '1',\n      markdown: '# article title',\n      rendered: 'The entire museum space',\n    },\n    {\n      key: '2',\n      markdown: '## section title',\n      rendered: 'Creates a room in the museum',\n    },\n    {\n      key: '3',\n      markdown: '$[walls](img.jpg) \\n$[ceiling](img.jpg) \\n$[floor](img.jpg)',\n      rendered: 'To change the textures of the walls, floor, or the ceiling'\n    }\n  ];\n\nconst markdownguidetablerooms = () => (\n  <div>\n    <Table id=\"panelstyle\"\n    // showHeader={false}\n      columns={columns}\n      dataSource={data1}\n      bordered\n      pagination={false}\n    // title={() => 'Header'}\n    // footer={() => 'Footer'}\n  />\n  <p id=\"panelstyle\">While uploading and using image textures for the walls, ceiling and floor, it is recommended that you crop your textures so that the dimensions are powers of 2 for performance reasons.</p>\n  </div>\n);\n\nexport default markdownguidetablerooms","import React from \"react\"\n\nimport { Table } from 'antd';\n\nconst columns = [\n    {\n      title: 'Markdown',\n      className: 'markdown',\n      dataIndex: 'markdown',\n    },\n    {\n      title: 'Rendered',\n      className: 'rendered',\n      dataIndex: 'rendered',\n    },\n  ];\n  \n  const data1 = [\n    {\n      key: '1',\n      markdown: '![caption text](path/to/file.jpg)',\n      rendered: '​This image will become a painting on the wall in the VR museum',\n    },\n    {\n      key: '2',\n      markdown: '~ \\n![caption text](path/to/file.jpg) \\n~',\n      rendered: 'This image will be visible in the VR museum, but not in the document view',\n    },\n    {\n      key: '3',\n      markdown: '![this image has audio attached](path/to/file.jpg) \\n^(audio-file.m4a)',\n      rendered: 'This audio file will be placed in the VR exhibit and the document, attached to the image or blockquote on the line above it'\n    },\n    {\n      key: '4',\n      markdown: '> Block quote',\n      rendered: '​This text will become a painting on the wall',\n    },\n    {\n        key: '5',\n        markdown: '> Multi line\\n> block quote',\n        rendered: '​This text will become a painting on the wall',\n      },\n    {\n      key: '6',\n      markdown: '```var s = \"JavaScript syntax highlighting\" \\n alert(s);```',\n      rendered: <code>var s = \"JavaScript syntax highlighting\" <br /> alert(s)</code>,\n    },\n  ];\n\nconst markdownguidetableartifact = () => (\n  <div>\n    <Table id=\"panelstyle\"\n    // showHeader={false}\n      columns={columns}\n      dataSource={data1}\n      bordered\n      pagination={false}\n    // title={() => 'Header'}\n    // footer={() => 'Footer'}\n  />\n  </div>\n);\n\nexport default markdownguidetableartifact","import React from \"react\"\n\nimport { Collapse } from 'antd';\nimport MarkdownGuideTableRooms from './markdownguidetablerooms';\nimport MarkdownGuideTableArtifact from './markdownguidetableartifact';\n\n\n\nconst { Panel } = Collapse;\n\nconst markdownguide = () => (\n    <div className=\"markdown-container\">\n    <Collapse defaultActiveKey={['']}>\n        <Panel header=\"Extended Markdown syntax guide\" id=\"headerstyle\" key=\"1\">\n            <p>Creating and formatting rooms in the museum:</p>\n            <MarkdownGuideTableRooms />\n            <p>Populating the room with artifacts:</p>\n            <MarkdownGuideTableArtifact />\n        </Panel>\n  </Collapse>\n    </div>\n);\n\nexport default markdownguide  ","import React from \"react\"\n\nimport { Tabs } from 'antd';\nimport { Input } from 'antd';\nimport MarkdownGuide from \"./markdownguide\";\n\nconst { TextArea } = Input;\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\nconst exhibittext = () => (\n    <div className=\"card-container\">\n        <Tabs onChange={callback} type=\"card\">\n            <TabPane  tab=\"Markdown\" key=\"1\">\n                <MarkdownGuide />\n\n                <TextArea id=\"editor\" placeholder=\"Markdown content to generate the VR exhibit goes here.\"></TextArea>\n            </TabPane>\n    </Tabs>\n    </div>\n)\n\nexport default exhibittext  ","import React from \"react\"\n\nimport { Upload, message, Button } from 'antd';\nimport { UploadOutlined } from '@ant-design/icons';\n\nconst props = {\n    name: 'file',\n    multiple: true,\n    customRequest(data) {\n      let reader = new FileReader();      \n      reader.readAsBinaryString(data.file);\n      reader.onload = function(e) {\n          let bits = e.target.result; \n\n          let src = `${data.file.name}`\n\n          sessionStorage.setItem(src, bits)\n      }\n    },\n    onChange(info) {\n      if (info.file.status !== 'uploading') {\n        console.log(info.file, info.fileList);\n      }\n      if (info.file.status === 'done') {\n        message.success(`${info.file.name} file uploaded successfully`);\n      } else if (info.file.status === 'error') {\n        message.error(`${info.file.name} file upload failed.`);\n      }\n    }\n  };\n  \nconst ImageFiles = () => (\n    <Upload {...props}>\n      <Button>\n        <UploadOutlined /> Upload\n      </Button>\n    </Upload>\n  )\n\nexport default ImageFiles\n","import PropTypes from \"prop-types\"\nimport React, {useState} from \"react\"\nimport { PageHeader } from 'antd';\n\n\nconst Header = ({ siteTitle }) => (\n\n  <PageHeader\n    className=\"site-page-header\"\n    title={siteTitle}\n    // avatar={{ src: 'https://avatars1.githubusercontent.com/u/8186664?s=460&v=4' }}    \n    />\n    \n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: `Malloci`,\n}\n\nexport default Header\n","\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport \"./layout.css\"\nconst Layout = ({ children }) => {\n\n  return (\n    <>\n      {/* <Header siteTitle={siteTitle}/> */}\n    \n      <div\n        style={{\n          margin: `0 auto`,\n          // maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer>\n          © {new Date().getFullYear()}, Built with mochi muffins.\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","export default class VRMD\n{\n    constructor(VSCode = null, debug = false)\n    {\n        this.VSCode = VSCode\n        this.debug = debug\n        this.tree = null\n        this.cleanedMD = null\n    }\n\n    parseList(mdListString)\n    {\n        \n        let exJSON = {}\n        exJSON.rooms = []\n        exJSON.theme = {floor: null, walls: null, ceiling: null}\n\n        let subJSON = {}\n        let artifacts = []\n\n        let level = \"\"\n        let text = \"\"\n\n        let block_quote = \"\"\n        let code_block = \"\"\n\n        let in_code = false\n\n        let hidden_block = false\n\n        let mdLines = mdListString.split(',')\n\n\n        for(let i = 0; i < mdLines.length; i++)\n        {      \n            let line = mdLines[i]\n            let words = line.split(\" \")            \n\n            // Headings\n            if (words[0].charAt(0) === \"#\" && !in_code)\n            {\n                if(words[0].includes(\"###\")) \n                    continue\n\n                level = words.shift()\n\n                if(subJSON.name !== null)\n                {\n                    subJSON.text = text\n                    subJSON.artifacts = artifacts\n            \n                    text = \"\"\n                    artifacts = []\n\n                    if(level === \"#\" || level === \"##\")\n                    {\n                        exJSON.rooms.push(subJSON)\n                        subJSON = {}\n                    }\n                }\n                else if (text !== \"\")\n                {\n                    exJSON.text = text\n                    exJSON.artifact = artifacts\n\n                    text = \"\"\n                    artifacts = []\n                }\n                if (level === \"#\")\n                {\n                    exJSON.name = words.join(\" \")\n                }\n                subJSON.name = words.join(\" \")\n            }\n\n            // Block Quotes\n            if (words[0].charAt(0) === \">\" && !in_code)\n            {\n                block_quote += words.join(\" \").replace(\">\", \"\").replace(/(^[\\s]+|[\\s]+$)/, \"\\n\")                                \n            }\n            else if (block_quote !== \"\")\n            {\n            artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n            block_quote = \"\"\n            }\n\n            // Code Blocks\n            if (words[0].includes(\"```\") && !in_code)\n            {\n                code_block += line + \"\\n\"\n                in_code = true\n            }\n            else if(in_code)\n            {\n                if(line.includes(\"```\"))\n                    in_code = false\n                code_block += line + \"\\n\"\n            }\n            else if (code_block === \"\" && words[0].charAt(0) === \"`\")\n            {\n                code_block += line + '\\n'\n                artifacts.push(this.parseArtifact(code_block, \"code\"))\n                code_block = \"\"\n            }\n            else if ( !in_code && code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }            \n\n            // Images\n            if (words[0].charAt(0) === \"!\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"image\"))\n            }\n\n            // VRMD EXTENDED SYNTAX\n            // Theme\n            if (words[0].charAt(0) === \"$\" && !in_code)\n            {\n                let field = line.substring(line.lastIndexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\n                let textureSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n\n                switch (field) {\n                    default:\n                        break\n                    case 'floor':\n                        exJSON.theme.floor = textureSrc\n                        break\n                    case 'walls':\n                        exJSON.theme.walls = textureSrc\n                        break\n                    case 'ceiling':\n                        exJSON.theme.ceiling = textureSrc\n                        break\n                }\n                mdLines.splice(i, 1)\n                --i\n            }\n            //3D models (.GLTF)\n            if (words[0].charAt(0) === \"&\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"3D\"))\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Audio\n            if (words[0].charAt(0) === \"^\" && !in_code)\n            {\n                this.addAudio(artifacts, line)\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Hidden Artifact\n            if (words[0] === \"~\" && !in_code)\n            {\n                hidden_block = !hidden_block\n            }\n\n            if (hidden_block || (words[0] === \"~\" && !in_code))\n            {\n                mdLines.splice(i, 1)\n                --i\n            }\n\n            if(this.debug)\n            {\n                console.log(artifacts);\n            }\n\n            text += line + '\\n'\n        }\n\n        if(subJSON.name !== null)\n        {\n            subJSON.text = text\n            subJSON.artifacts = artifacts\n\n            text = \"\"\n            artifacts = []\n\n            exJSON.rooms.push(subJSON)\n            subJSON = {}\n        }        \n        this.tree = exJSON\n        this.cleanedMD = mdLines.join('\\n')\n        \n        return this.tree\n    }\n\n    parse(markDown)\n    {\n        console.log(\"parsing\");\n        console.log(markDown);\n        \n        \n        let exJSON = {}\n        exJSON.rooms = []\n        exJSON.theme = {floor: null, walls: null, ceiling: null}\n\n        let subJSON = {}\n        let artifacts = []\n\n        let level = \"\"\n        let text = \"\"\n\n        let block_quote = \"\"\n        let code_block = \"\"\n\n        let in_code = false\n\n        let hidden_block = false\n\n        let mdLines = markDown.split('\\n')\n\n        for(let i = 0; i < mdLines.length; i++)\n        {      \n            let line = mdLines[i]\n            console.log(line);\n            \n            \n            let words = line.split(\" \")\n            console.log(words);\n                        \n\n            // Headings\n            if (words[0].charAt(0) === \"#\" && !in_code)\n            {\n                if(words[0].includes(\"###\")) \n                    continue\n\n                level = words.shift()\n\n                if(subJSON.name !== null)\n                {\n                    subJSON.text = text\n                    subJSON.artifacts = artifacts\n            \n                    text = \"\"\n                    artifacts = []\n\n                    if(level === \"#\" || level === \"##\")\n                    {\n                        exJSON.rooms.push(subJSON)\n                        subJSON = {}\n                    }\n                }\n                else if (text !== \"\")\n                {\n                    exJSON.text = text\n                    exJSON.artifact = artifacts\n\n                    text = \"\"\n                    artifacts = []\n                }\n                if (level === \"#\")\n                {\n                    exJSON.name = words.join(\" \")\n                }\n                subJSON.name = words.join(\" \")\n            }            \n\n            // Block Quotes\n            if (words[0].charAt(0) === \">\" && !in_code)\n            {\n                console.log(\"block quote!!\");\n                \n                block_quote += words.join(\" \").replace(\">\", \"\").replace(/(^[\\s]+|[\\s]+$)/, \"\\n\")                                \n            }\n            else if (block_quote !== \"\")\n            {\n                artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n                block_quote = \"\"\n            }\n\n            // Code Blocks\n            if (words[0].includes(\"```\") && !in_code)\n            {\n                code_block += line + \"\\n\"\n                in_code = true\n            }\n            else if(in_code)\n            {\n                if(line.includes(\"```\"))\n                    in_code = false\n                code_block += line + \"\\n\"\n            }\n            else if (code_block === \"\" && words[0].charAt(0) === \"`\")\n            {\n                code_block += line + '\\n'\n                artifacts.push(this.parseArtifact(code_block, \"code\"))\n                code_block = \"\"\n            }\n            else if ( !in_code && code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }            \n\n            // Images\n            if (words[0].charAt(0) === \"!\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"image\"))\n            }\n\n            // VRMD EXTENDED SYNTAX\n            // Theme\n            if (words[0].charAt(0) === \"$\" && !in_code)\n            {\n                let field = line.substring(line.lastIndexOf(\"[\") + 1, line.lastIndexOf(\"]\"))\n                let textureSrc = line.substring(line.lastIndexOf(\"(\") + 1, line.lastIndexOf(\")\"))\n\n                if(this.VSCode && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(textureSrc)))\n                { \n                    textureSrc = this.VSCode + textureSrc\n                }\n\n                switch (field) {\n                    default:\n                        break\n                    case 'floor':\n                        exJSON.theme.floor = textureSrc\n                        break\n                    case 'walls':\n                        exJSON.theme.walls = textureSrc\n                        break\n                    case 'ceiling':\n                        exJSON.theme.ceiling = textureSrc\n                        break\n                }\n                mdLines.splice(i, 1)\n                --i\n            }\n            //3D models (.GLTF)\n            if (words[0].charAt(0) === \"&\" && !in_code)\n            {\n                artifacts.push(this.parseArtifact(line, \"3D\"))\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Audio\n            if (words[0].charAt(0) === \"^\" && !in_code)\n            {\n                this.addAudio(artifacts, line)\n                mdLines.splice(i, 1)\n                --i\n            }\n            // Hidden Artifact\n            if (words[0] === \"~\" && !in_code)\n            {\n                hidden_block = !hidden_block\n            }\n\n            if (hidden_block || (words[0] === \"~\" && !in_code))\n            {\n                mdLines.splice(i, 1)\n                --i\n            }\n\n            text += line + '\\n'\n        }\n\n        if(subJSON.name !== null)\n        {\n            if (block_quote !== \"\")\n            {\n                artifacts.push(this.parseArtifact(block_quote, \"block quote\"))\n                block_quote = \"\"\n            }\n            if (code_block !== \"\")\n            {\n                artifacts.push(this.parseArtifact(code_block, \"code block\"))\n                code_block = \"\"\n            }\n            subJSON.text = text\n            subJSON.artifacts = artifacts\n\n            text = \"\"\n            artifacts = []\n\n            exJSON.rooms.push(subJSON)\n            subJSON = {}\n        }        \n        this.tree = exJSON\n        this.cleanedMD = mdLines.join('\\n')\n        \n        return this.tree\n    }\n\n    parseArtifact(text, type)\n    {\n        console.log(text, type);\n        \n        let artifact = {}\n        artifact.type = type\n        artifact.audioSrc = null\n\n        switch(type)\n        {\n            default:\n                break\n            case 'image':\n                artifact.src = text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))\n                artifact.alt = text.substring(text.lastIndexOf(\"[\") + 1, text.lastIndexOf(\"]\"))\n                break\n            case 'block quote':\n                artifact.text = text\n                break\n            case 'code':\n                artifact.code = text.replace(/`/g, \"\").replace('\\n', '')\n                break\n            case 'code block':\n                let cleaned = text.replace(/`/g, \"\")\n                artifact.lang = cleaned.split(\"\\n\")[0]\n                artifact.code = cleaned.replace(artifact.lang + '\\n', '')\n                break\n            case '3D':\n                artifact.src = text.substring(text.lastIndexOf(\"(\") + 1, text.lastIndexOf(\")\"))\n                artifact.name = text.substring(text.lastIndexOf(\"[\") + 1, text.lastIndexOf(\"]\"))\n                break\n        }\n\n        if(this.VSCode && artifact.src && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(artifact.src)))\n        {             \n            artifact.src = this.VSCode + artifact.src\n        }\n        return artifact\n    }\n\n    addAudio(artifacts, audio)\n    {\n        artifacts[artifacts.length - 1].audioSrc = audio.substring(audio.lastIndexOf(\"(\") + 1, audio.lastIndexOf(\")\"))\n\n        if(this.VSCode && !(/^(?:\\/|[a-z]+:\\/\\/)/.test(artifacts[artifacts.length - 1].audioSrc)))\n        {\n            artifacts[artifacts.length - 1].audioSrc = this.VSCode + artifacts[artifacts.length - 1].audioSrc\n        }\n    }\n}\n\n","import React, {useEffect} from \"react\"\nimport ReactMarkdown from \"react-markdown\"\nimport hljs from \"highlight.js\"\n\nconst Exhibitdocument = (props) => {\n\n\n    \n    useEffect(()=>{\n        document.getElementById(\"doc-preview\").querySelectorAll(\"pre code\").forEach(block => {\n          hljs.highlightBlock(block);\n        });\n      },[props.md])\n  \n      function flatten(text, child) {\n        return typeof child === 'string'\n          ? text + child\n          : React.Children.toArray(child.props.children).reduce(flatten, text)\n      }\n      \n      function HeadingRenderer(props) {\n        let children = React.Children.toArray(props.children)\n        let text = children.reduce(flatten, '')\n        let slug = text.toLowerCase().replace(/[!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\W/g, '-')\n        return React.createElement('h' + props.level, {id: slug}, props.children)\n      }\n    \n    return(\n    <div id=\"doc-preview\">\n        <ReactMarkdown source={props.md} renderers={{heading: HeadingRenderer}}/>\n    </div>\n)}\n\nexport default Exhibitdocument","import React from \"react\"\nimport {Scene, Entity} from \"aframe-react\"\nimport { OmitProps } from \"antd/lib/transfer/renderListBody\"\n\nconst exhibit = (props) => {\n  \n  let treeString = JSON.stringify(props.tree)\n\n  let cursor = null\n\n  if(props.b64) cursor =  <a-cursor></a-cursor>\n\n\n  return(\n      <Scene id={props.exhibitId} vr-mode-ui=\"enabled: false\" embedded background=\"color: #87ceeb\">\n        <a-assets>\n            <a-mixin id=\"checkpoint\"></a-mixin>\n            <a-mixin id=\"checkpoint-hovered\" color=\"#6CEEB5\"></a-mixin>\n            <img id=\"wallTexture\" src=\"/textures/wall.jpg\"/>\n            <img id=\"floorTexture\" src=\"/textures/concrete_floor.jpg\"/>\n            <img id=\"ceilingTexture\" src=\"/textures/concrete_floor.jpg\"/>\n            <img id=\"frameTexture\" src=\"/textures/frame.jpg\"/>\n          </a-assets>\n          <a-light type=\"ambient\" position=\"0 6 0\" rotation=\"0 0 45\"></a-light>\n          <Entity id=\"rig\"\n                    movement-controls={{enabled: true}}\n                    position=\"2 0 1\" \n                    rotation=\"0 180 0\">\n            <a-camera id=\"camera\"\n            look-controls=\"pointerLockEnabled: true\">\n            <a-sound  id =\"ambient-track\" src=\"src: url(/audio/light-piano-noodling-in-b.mp3)\" autoplay=\"false\" volume=\"0.4\" loop =\"true\" position=\"0 4 0\"></a-sound>\n              {cursor}\n            </a-camera>\n          <Entity laser-controls={{hand: 'left'}} raycaster={{objects: '.clickable', far: 3}} teleport-controls={{collisionEntities: '.scenery', drawForAllCollisions: false, landingMaxAngle: 45, button: 'trigger', cameraRig: '#rig', teleportOrigin: '#camera'}}></Entity>\n          <Entity laser-controls={{hand: 'right'}} raycaster={{objects: '.clickable', far: 3}} teleport-controls={{collisionEntities: '.scenery', drawForAllCollisions: false, landingMaxAngle: 45, button: 'trigger', cameraRig: '#rig', teleportOrigin: '#camera'}}></Entity>\n        </Entity>\n        <Entity id=\"museum\" \n                malloci={{\n                  tree: treeString,\n                  hallWidth: 8,\n                  wallHeight: 5,\n                  API: \"https://malloci.uc.r.appspot.com/generate\",\n                  base64Mode: props.b64,\n                  debug: props.debug}}></Entity>\n      </Scene>\n)}\n\nexport default exhibit","import React, {useState} from 'react';\n// import './App.css';\n\nimport ExhibitText from \"../components/exhibittext\"\nimport ImageFiles from \"../components/imagefiles\"\nimport { Button } from 'antd';\nimport { Row, Col, Tabs } from 'antd';\nimport Header from \"../components/header\";\nimport { Alert } from 'antd';\nimport Layout from \"../components/layout\"\n\nimport VRMD from \"../malloci/vrmd-parser\"\n\nimport ExhibitDocument from \"../components/exhibitdocument\"\nimport Exhibit from \"../components/exhibit\"\n\nconst { TabPane } = Tabs;\n\nfunction callback(key) {\n  console.log(key);\n}\n\n\nfunction Mallocieditor() {\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  const [md, setMd] = useState('')  \n\n  const updateExhibit = () => {\n  \n    const vrmdParser = new VRMD()\n    const editor = document.getElementById('editor')\n  \n    let tree = vrmdParser.parse(editor.value)\n    setMuseumTree(tree)\n    setMd(vrmdParser.cleanedMD)\n  }\n  \n  return (\n    \n   <Layout >\n     <Header siteTitle={\"Malloci Editor\"}></Header>\n     <div id=\"alertstyle\">\n     <Alert \n      message=\"Online only!\"\n      description=\"This is an online editor: museums you create using this tool will not be saved! Please copy your text from the Markdown panel before you close your session.\"\n      type=\"info\"\n      showIcon closable\n    />\n    </div>\n     <Row>\n     <Col classname=\"gutter-col\">\n        <div className=\"description\">\n            <p>A web editor to view museums written in markdown.<br></br>      \n              Use the panel on the left to create your exhibit; there's a guide detailing the markdown syntax you should use. View your exhibit space in the \"Exhibit\" tab of panel on the right. The \"Document\" tab will contain an article of your exhibit instead.</p>\n        </div>\n    </Col>\n     </Row>\n    <Row>\n      <Col className=\"gutter-col\" span={12}>\n          <div className=\"gutter-row\" id=\"exhibittext\">\n            <ExhibitText />\n          </div>\n\n          <div className=\"gutter-row\">\n            <Button onClick={() => {updateExhibit()}} id=\"build-exhibit\" type=\"primary\">Build</Button>\n          </div>\n        \n          <div className=\"gutter-row\" id=\"imageupload\">\n            <ImageFiles></ImageFiles>\n          </div>\n        \n      </Col>\n      <Col className=\"gutter-col\" span={12}>\n      <div id=\"exhibitmaster\">\n          <div className=\"card-container\">\n            <Tabs onChange={callback} type=\"card\">\n                <TabPane id=\"exhibit_pane\" tab=\"Exhibit\" key=\"1\">\n                    <Exhibit exhibitId=\"preview\" tree={museumTree} b64={true} debug={true}/>\n                </TabPane>\n        \n                <TabPane tab=\"Document\" key=\"2\">\n                    <ExhibitDocument md={md} />\n                </TabPane>\n          </Tabs>\n          </div>\n        </div>\n      </Col>\n    </Row>\n\n  </Layout>\n  );\n}\n\nexport default Mallocieditor;\n","import React, {useState, useEffect} from \"react\"\nimport \"react-markdown\"\nimport hljs from \"highlight.js\"\nimport VRMD from \"../malloci/vrmd-parser\"\nimport Layout from \"../components/layout\"\nimport Exhibit from \"../components/exhibit\"\nimport './museum.css'\nimport { Typography } from 'antd';\nimport ReactMarkdown from \"react-markdown\"\n\n// const heroimg = '../logo.svg'\nconst Museum = () => {\n\n  let [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  let[md, setMd] = useState('')\n\n  const vrmdParser = new VRMD()\n\n    useEffect(() => {\n      fetch(\"https://raw.githubusercontent.com/mallocivr/mallocivr.github.io/master/markDown/home.md\")\n      .then(res => res.text())\n      .then(post => {\n        vrmdParser.parse(post)\n        setMd(vrmdParser.cleanedMD)\n        setMuseumTree(vrmdParser.tree)\n      })\n      .catch((err) => console.error(err));\n    }, [])\n\n    useEffect(()=>{\n      document.getElementById(\"md_article\").querySelectorAll(\"pre code\").forEach(block => {\n        hljs.highlightBlock(block);\n      });\n    },[md])\n\n    function flatten(text, child) {\n      return typeof child === 'string'\n        ? text + child\n        : React.Children.toArray(child.props.children).reduce(flatten, text)\n    }\n    \n    function HeadingRenderer(props) {\n      let children = React.Children.toArray(props.children)\n      let text = children.reduce(flatten, '')\n      let slug = text.toLowerCase().replace(/[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]/g,\"\").replace(/\\W/g, '-')\n      return React.createElement('h' + props.level, {id: slug}, props.children)\n    }\n\n\n  \n  return(\n  <Layout >\n    <Typography >\n    {/* <Header siteTitle={\"Malloci\"}></Header> */}\n    {/* <Row id=\"hero\">\n      <Col className=\"heroimg\" span={12}>\n        \n      </Col>\n      <Col className=\"herotext\" span={12}>\n        <h1>Malloci</h1>\n      </Col>\n    </Row> */}\n\n    <div className=\"museum\">\n      {/* <img className=\"heroimg\" src={heroimg}></img> */}\n      <div id=\"md_article\" className=\"museumtext\">\n        <ReactMarkdown source={md} renderers={{heading: HeadingRenderer}}/>\n      </div>\n    </div>\n    <Exhibit exhibitId=\"exhibit\" tree= {museumTree} b64={false} debug={true}/>\n    </Typography>\n  </Layout>\n)};\n\nexport default Museum","import React, {useState} from \"react\"\nimport {Link} from 'react-router-dom';\nimport Layout from \"../components/layout\"\nimport \"./gallery.css\"\nimport { Card } from 'antd';\n\nimport Header from \"../components/header\";\n\nconst { Meta } = Card;\n\nconst Gallery = () => (\n    <Layout >\n     <Header siteTitle={\"The Malloci Gallery\"} ></Header>\n    <div className=\"description\">\n        <p>A curation of VR museums generated using Malloci.</p>\n    </div>\n    <div className=\"mastercard\">\n    <Link to=\"/Exhibits/museums\">\n      <Card className=\"card-space\"\n        hoverable\n        style={{ width: 300 }}\n        cover={<img alt=\"example\" src=\"/img/Maria.jpg\" />}\n      >\n      <Meta title=\"A journey through time\" description=\"the history of museums\" />\n      </Card>     \n    </Link>\n\n  {/* <Card className=\"card-space\"\n    hoverable\n    style={{ width: 300 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"The Other Auroras\" description=\"Northern lights over Iceland\" />\n  </Card> */}\n  </div>\n  </Layout>\n);\n\n\nexport default Gallery","import React, {useState, useEffect} from \"react\"\nimport { useParams } from 'react-router-dom';\nimport hljs from \"highlight.js\"\nimport VRMD from \"../malloci/vrmd-parser\"\nimport Layout from \"../components/layout\"\nimport Exhibit from \"../components/exhibit\"\nimport { Typography } from 'antd';\n\nimport './museum.css'\nimport ReactMarkdown from \"react-markdown\"\n\nconst heroimg = '../logo.svg'\nconst Example = () => {\n\n  const { exhibit } = useParams();\n\n  const [museumTree, setMuseumTree] = useState({ theme: {floor: null, walls: null, ceiling: null}, rooms: [{name:\"1\", artifacts: []}, {name:\"2\", artifacts:[]}]})  \n  const [md, setMd] = useState('')\n\n  const vrmdParser = new VRMD()\n\n    useEffect(() => {\n      console.log(exhibit);\n      \n      fetch(`https://raw.githubusercontent.com/mallocivr/mallocivr.github.io/master/markDown/exhibits/${exhibit}.md`)\n      .then(res => res.text())\n      .then(post => {        \n        vrmdParser.parse(post)\n        \n        setMd(vrmdParser.cleanedMD)\n        setMuseumTree(vrmdParser.tree)\n      })\n      .catch((err) => console.error(err));\n    }, [])\n\n    useEffect(()=>{\n      document.getElementById(\"md_article\").querySelectorAll(\"pre code\").forEach(block => {\n        hljs.highlightBlock(block);\n      });\n    },[md])\n\n    function flatten(text, child) {\n      return typeof child === 'string'\n        ? text + child\n        : React.Children.toArray(child.props.children).reduce(flatten, text)\n    }\n    \n    function HeadingRenderer(props) {\n      let children = React.Children.toArray(props.children)\n      let text = children.reduce(flatten, '')\n      let slug = text.toLowerCase().replace(/[!\"#$%&'()*+,./:;<=>?@[\\]^`{|}~]/g,\"\").replace(/\\W/g, '-')\n      return React.createElement('h' + props.level, {id: slug}, props.children)\n    }\n\n\n  \n  return(\n  <Layout >\n    <Typography>\n    <div className=\"museum\">\n      {/* <img className=\"m\" src={heroimg}></img> */}\n      <div id=\"md_article\" className=\"museumtext\">\n        <ReactMarkdown source={md} renderers={{heading: HeadingRenderer}}/>\n      </div>\n    </div>\n    <Exhibit exhibitId=\"exhibit\" tree= {museumTree} b64={false} debug={true}/>\n    </Typography>\n  </Layout>\n)};\n\nexport default Example","import React, {useState} from \"react\"\nimport Layout from \"../components/layout\"\nimport \"./gallery.css\"\nimport { Card } from 'antd';\n\nimport Header from \"../components/header\";\n\nconst { Meta } = Card;\n\nconst About = () => (\n    <Layout >\n     <Header siteTitle={\"About us\"} ></Header>\n    <div className=\"description\">\n        <p>The team behind Malloci</p>\n    </div>\n    <div className=\"mastercard\">\n<Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Masha Belyi\" description=\"NLP Engineer\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Michael Gutensohn\" description=\"Product Owner + VR Software Engineer\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Jennifer Momoh\" description=\"Quantitative UX Researcher\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Sharanya Soundararajan\" description=\"Rabbit\" />\n  </Card>\n\n  <Card className=\"card-space\"\n    hoverable\n    style={{ width: 500 }}\n    cover={<img alt=\"example\" src=\"https://upload.wikimedia.org/wikipedia/commons/e/e2/Northern_lights_%289997815384%29.jpg\" />}\n  >\n    <Meta title=\"Yejun Wu\" description=\"VR Experience Designer\" />\n  </Card>\n  </div>\n  </Layout>\n);\n\n\nexport default About","import React, {useState} from \"react\"\nimport './App.css'\nimport {\n  Router as Router,\n  NavLink,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { Menu } from 'antd';\nimport Mallocieditor from \"./pages/mallocieditor\"\nimport Museum from \"./pages/museum\"\nimport Gallery from \"./pages/gallery\"\nimport Example from \"./pages/example\"\nimport About from \"./pages/about\"\n\n\nconst logo = \"./logo192.png\"\n\nclass App extends React.Component {\n  // state = {\n  //   current: 'home',\n  // };\n\n  // handleClick = e => {\n  //   console.log('click ', e);\n  //   this.setState({\n  //     current: e.key,\n  //   });\n  // };\n\n  render() {\n    return (\n     <div id=\"navbar\">\n       <a href=\"/\"><img src={logo} id=\"logoformatting\"></img></a>\n\n      <div id=\"mallocititle\"><h2><a href=\"/\">Malloci</a></h2></div>\n\n\n    <Router>\n      <div id=\"menualign\">\n        \n            <Menu mode=\"horizontal\">\n              <Menu.Item key=\"gallery\">\n                <NavLink to=\"/\">\n                  Gallery\n      </NavLink>\n              </Menu.Item>\n              <Menu.Item key=\"museum\">\n              <NavLink to=\"/Malloci\">\n              About Malloci\n      </NavLink>\n    </Menu.Item>\n              <Menu.Item key=\"mallocieditor\">\n                <NavLink to=\"/Editor\">\n                  Editor\n      </NavLink>\n              </Menu.Item>\n              {/* <Menu.Item key=\"about\">\n              <NavLink to=\"/TheTeam\">\n                The team\n                </NavLink>\n    </Menu.Item> */}\n            </Menu>\n      </div>\n        <Switch>\n          <Route exact path=\"/\">\n            <Gallery />\n          </Route>\n          <Route exact path=\"/Editor\">\n            <Mallocieditor />\n          </Route>\n          <Route exact path=\"/Malloci\">\n            <Museum />\n          </Route>\n          <Route path=\"/exhibits/:exhibit\">\n            <Example/>\n          </Route>\n          <Route exact path=\"/TheTeam\">\n            <About />\n          </Route>\n        </Switch>\n      </Router>\n      \n     </div>\n    );\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}